/*
 * This file is generated by jOOQ.
 */
package com.freighttrust.jooq.tables.records;


import com.freighttrust.jooq.enums.FileProvider;
import com.freighttrust.jooq.tables.File;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.JSONB;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.13.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FileRecord extends UpdatableRecordImpl<FileRecord> implements Record3<Long, FileProvider, JSONB> {

    private static final long serialVersionUID = -893219689;

    /**
     * Setter for <code>public.file.id</code>.
     */
    public FileRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.file.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.file.provider</code>.
     */
    public FileRecord setProvider(FileProvider value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.file.provider</code>.
     */
    public FileProvider getProvider() {
        return (FileProvider) get(1);
    }

    /**
     * Setter for <code>public.file.metadata</code>.
     */
    public FileRecord setMetadata(JSONB value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.file.metadata</code>.
     */
    public JSONB getMetadata() {
        return (JSONB) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, FileProvider, JSONB> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, FileProvider, JSONB> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return File.FILE.ID;
    }

    @Override
    public Field<FileProvider> field2() {
        return File.FILE.PROVIDER;
    }

    @Override
    public Field<JSONB> field3() {
        return File.FILE.METADATA;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public FileProvider component2() {
        return getProvider();
    }

    @Override
    public JSONB component3() {
        return getMetadata();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public FileProvider value2() {
        return getProvider();
    }

    @Override
    public JSONB value3() {
        return getMetadata();
    }

    @Override
    public FileRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public FileRecord value2(FileProvider value) {
        setProvider(value);
        return this;
    }

    @Override
    public FileRecord value3(JSONB value) {
        setMetadata(value);
        return this;
    }

    @Override
    public FileRecord values(Long value1, FileProvider value2, JSONB value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FileRecord
     */
    public FileRecord() {
        super(File.FILE);
    }

    /**
     * Create a detached, initialised FileRecord
     */
    public FileRecord(Long id, FileProvider provider, JSONB metadata) {
        super(File.FILE);

        set(0, id);
        set(1, provider);
        set(2, metadata);
    }
}
