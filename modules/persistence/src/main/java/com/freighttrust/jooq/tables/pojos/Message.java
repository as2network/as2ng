/*
 * This file is generated by jOOQ.
 */
package com.freighttrust.jooq.tables.pojos;


import java.io.Serializable;
import java.util.Arrays;
import java.util.UUID;

import javax.annotation.processing.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.13.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Message implements Serializable {

    private static final long serialVersionUID = 2113953880;

    private UUID     requestId;
    private String   encryptionAlgorithm;
    private String   compressionAlgorithm;
    private String[] mics;
    private Boolean  isMdnRequested;
    private Boolean  isMdnAsync;
    private String   receiptDeliveryOption;

    public Message() {}

    public Message(Message value) {
        this.requestId = value.requestId;
        this.encryptionAlgorithm = value.encryptionAlgorithm;
        this.compressionAlgorithm = value.compressionAlgorithm;
        this.mics = value.mics;
        this.isMdnRequested = value.isMdnRequested;
        this.isMdnAsync = value.isMdnAsync;
        this.receiptDeliveryOption = value.receiptDeliveryOption;
    }

    public Message(
        UUID     requestId,
        String   encryptionAlgorithm,
        String   compressionAlgorithm,
        String[] mics,
        Boolean  isMdnRequested,
        Boolean  isMdnAsync,
        String   receiptDeliveryOption
    ) {
        this.requestId = requestId;
        this.encryptionAlgorithm = encryptionAlgorithm;
        this.compressionAlgorithm = compressionAlgorithm;
        this.mics = mics;
        this.isMdnRequested = isMdnRequested;
        this.isMdnAsync = isMdnAsync;
        this.receiptDeliveryOption = receiptDeliveryOption;
    }

    public UUID getRequestId() {
        return this.requestId;
    }

    public Message setRequestId(UUID requestId) {
        this.requestId = requestId;
        return this;
    }

    public String getEncryptionAlgorithm() {
        return this.encryptionAlgorithm;
    }

    public Message setEncryptionAlgorithm(String encryptionAlgorithm) {
        this.encryptionAlgorithm = encryptionAlgorithm;
        return this;
    }

    public String getCompressionAlgorithm() {
        return this.compressionAlgorithm;
    }

    public Message setCompressionAlgorithm(String compressionAlgorithm) {
        this.compressionAlgorithm = compressionAlgorithm;
        return this;
    }

    public String[] getMics() {
        return this.mics;
    }

    public Message setMics(String... mics) {
        this.mics = mics;
        return this;
    }

    public Boolean getIsMdnRequested() {
        return this.isMdnRequested;
    }

    public Message setIsMdnRequested(Boolean isMdnRequested) {
        this.isMdnRequested = isMdnRequested;
        return this;
    }

    public Boolean getIsMdnAsync() {
        return this.isMdnAsync;
    }

    public Message setIsMdnAsync(Boolean isMdnAsync) {
        this.isMdnAsync = isMdnAsync;
        return this;
    }

    public String getReceiptDeliveryOption() {
        return this.receiptDeliveryOption;
    }

    public Message setReceiptDeliveryOption(String receiptDeliveryOption) {
        this.receiptDeliveryOption = receiptDeliveryOption;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Message other = (Message) obj;
        if (requestId == null) {
            if (other.requestId != null)
                return false;
        }
        else if (!requestId.equals(other.requestId))
            return false;
        if (encryptionAlgorithm == null) {
            if (other.encryptionAlgorithm != null)
                return false;
        }
        else if (!encryptionAlgorithm.equals(other.encryptionAlgorithm))
            return false;
        if (compressionAlgorithm == null) {
            if (other.compressionAlgorithm != null)
                return false;
        }
        else if (!compressionAlgorithm.equals(other.compressionAlgorithm))
            return false;
        if (mics == null) {
            if (other.mics != null)
                return false;
        }
        else if (!Arrays.equals(mics, other.mics))
            return false;
        if (isMdnRequested == null) {
            if (other.isMdnRequested != null)
                return false;
        }
        else if (!isMdnRequested.equals(other.isMdnRequested))
            return false;
        if (isMdnAsync == null) {
            if (other.isMdnAsync != null)
                return false;
        }
        else if (!isMdnAsync.equals(other.isMdnAsync))
            return false;
        if (receiptDeliveryOption == null) {
            if (other.receiptDeliveryOption != null)
                return false;
        }
        else if (!receiptDeliveryOption.equals(other.receiptDeliveryOption))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.requestId == null) ? 0 : this.requestId.hashCode());
        result = prime * result + ((this.encryptionAlgorithm == null) ? 0 : this.encryptionAlgorithm.hashCode());
        result = prime * result + ((this.compressionAlgorithm == null) ? 0 : this.compressionAlgorithm.hashCode());
        result = prime * result + ((this.mics == null) ? 0 : Arrays.hashCode(this.mics));
        result = prime * result + ((this.isMdnRequested == null) ? 0 : this.isMdnRequested.hashCode());
        result = prime * result + ((this.isMdnAsync == null) ? 0 : this.isMdnAsync.hashCode());
        result = prime * result + ((this.receiptDeliveryOption == null) ? 0 : this.receiptDeliveryOption.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Message (");

        sb.append(requestId);
        sb.append(", ").append(encryptionAlgorithm);
        sb.append(", ").append(compressionAlgorithm);
        sb.append(", ").append(Arrays.toString(mics));
        sb.append(", ").append(isMdnRequested);
        sb.append(", ").append(isMdnAsync);
        sb.append(", ").append(receiptDeliveryOption);

        sb.append(")");
        return sb.toString();
    }
}
