/*
 * This file is generated by jOOQ.
 */
package com.freighttrust.jooq.tables.pojos;


import java.io.Serializable;
import java.time.OffsetDateTime;
import java.util.Arrays;

import javax.annotation.processing.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.13.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class KeyPair implements Serializable {

    private static final long serialVersionUID = 1472914955;

    private Long           id;
    private String         serialNumber;
    private String         certificate;
    private String         privateKey;
    private String         privateKeyType;
    private String         issuingCa;
    private String[]       caChain;
    private OffsetDateTime expiresAt;

    public KeyPair() {}

    public KeyPair(KeyPair value) {
        this.id = value.id;
        this.serialNumber = value.serialNumber;
        this.certificate = value.certificate;
        this.privateKey = value.privateKey;
        this.privateKeyType = value.privateKeyType;
        this.issuingCa = value.issuingCa;
        this.caChain = value.caChain;
        this.expiresAt = value.expiresAt;
    }

    public KeyPair(
        Long           id,
        String         serialNumber,
        String         certificate,
        String         privateKey,
        String         privateKeyType,
        String         issuingCa,
        String[]       caChain,
        OffsetDateTime expiresAt
    ) {
        this.id = id;
        this.serialNumber = serialNumber;
        this.certificate = certificate;
        this.privateKey = privateKey;
        this.privateKeyType = privateKeyType;
        this.issuingCa = issuingCa;
        this.caChain = caChain;
        this.expiresAt = expiresAt;
    }

    public Long getId() {
        return this.id;
    }

    public KeyPair setId(Long id) {
        this.id = id;
        return this;
    }

    public String getSerialNumber() {
        return this.serialNumber;
    }

    public KeyPair setSerialNumber(String serialNumber) {
        this.serialNumber = serialNumber;
        return this;
    }

    public String getCertificate() {
        return this.certificate;
    }

    public KeyPair setCertificate(String certificate) {
        this.certificate = certificate;
        return this;
    }

    public String getPrivateKey() {
        return this.privateKey;
    }

    public KeyPair setPrivateKey(String privateKey) {
        this.privateKey = privateKey;
        return this;
    }

    public String getPrivateKeyType() {
        return this.privateKeyType;
    }

    public KeyPair setPrivateKeyType(String privateKeyType) {
        this.privateKeyType = privateKeyType;
        return this;
    }

    public String getIssuingCa() {
        return this.issuingCa;
    }

    public KeyPair setIssuingCa(String issuingCa) {
        this.issuingCa = issuingCa;
        return this;
    }

    public String[] getCaChain() {
        return this.caChain;
    }

    public KeyPair setCaChain(String... caChain) {
        this.caChain = caChain;
        return this;
    }

    public OffsetDateTime getExpiresAt() {
        return this.expiresAt;
    }

    public KeyPair setExpiresAt(OffsetDateTime expiresAt) {
        this.expiresAt = expiresAt;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final KeyPair other = (KeyPair) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (serialNumber == null) {
            if (other.serialNumber != null)
                return false;
        }
        else if (!serialNumber.equals(other.serialNumber))
            return false;
        if (certificate == null) {
            if (other.certificate != null)
                return false;
        }
        else if (!certificate.equals(other.certificate))
            return false;
        if (privateKey == null) {
            if (other.privateKey != null)
                return false;
        }
        else if (!privateKey.equals(other.privateKey))
            return false;
        if (privateKeyType == null) {
            if (other.privateKeyType != null)
                return false;
        }
        else if (!privateKeyType.equals(other.privateKeyType))
            return false;
        if (issuingCa == null) {
            if (other.issuingCa != null)
                return false;
        }
        else if (!issuingCa.equals(other.issuingCa))
            return false;
        if (caChain == null) {
            if (other.caChain != null)
                return false;
        }
        else if (!Arrays.equals(caChain, other.caChain))
            return false;
        if (expiresAt == null) {
            if (other.expiresAt != null)
                return false;
        }
        else if (!expiresAt.equals(other.expiresAt))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.serialNumber == null) ? 0 : this.serialNumber.hashCode());
        result = prime * result + ((this.certificate == null) ? 0 : this.certificate.hashCode());
        result = prime * result + ((this.privateKey == null) ? 0 : this.privateKey.hashCode());
        result = prime * result + ((this.privateKeyType == null) ? 0 : this.privateKeyType.hashCode());
        result = prime * result + ((this.issuingCa == null) ? 0 : this.issuingCa.hashCode());
        result = prime * result + ((this.caChain == null) ? 0 : Arrays.hashCode(this.caChain));
        result = prime * result + ((this.expiresAt == null) ? 0 : this.expiresAt.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("KeyPair (");

        sb.append(id);
        sb.append(", ").append(serialNumber);
        sb.append(", ").append(certificate);
        sb.append(", ").append(privateKey);
        sb.append(", ").append(privateKeyType);
        sb.append(", ").append(issuingCa);
        sb.append(", ").append(Arrays.toString(caChain));
        sb.append(", ").append(expiresAt);

        sb.append(")");
        return sb.toString();
    }
}
