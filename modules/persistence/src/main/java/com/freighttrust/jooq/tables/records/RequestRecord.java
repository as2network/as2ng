/*
 * This file is generated by jOOQ.
 */
package com.freighttrust.jooq.tables.records;


import com.freighttrust.jooq.enums.RequestType;
import com.freighttrust.jooq.tables.Request;

import java.time.OffsetDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.JSONB;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RequestRecord extends UpdatableRecordImpl<RequestRecord> implements Record13<UUID, RequestType, JSONB, Long, String, String, Long, UUID, OffsetDateTime, OffsetDateTime, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.request.id</code>.
     */
    public RequestRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.request.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.request.type</code>.
     */
    public RequestRecord setType(RequestType value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.request.type</code>.
     */
    public RequestType getType() {
        return (RequestType) get(1);
    }

    /**
     * Setter for <code>public.request.headers</code>.
     */
    public RequestRecord setHeaders(JSONB value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.request.headers</code>.
     */
    public JSONB getHeaders() {
        return (JSONB) get(2);
    }

    /**
     * Setter for <code>public.request.body_file_id</code>.
     */
    public RequestRecord setBodyFileId(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.request.body_file_id</code>.
     */
    public Long getBodyFileId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>public.request.message_id</code>.
     */
    public RequestRecord setMessageId(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.request.message_id</code>.
     */
    public String getMessageId() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.request.subject</code>.
     */
    public RequestRecord setSubject(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.request.subject</code>.
     */
    public String getSubject() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.request.trading_channel_id</code>.
     */
    public RequestRecord setTradingChannelId(Long value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.request.trading_channel_id</code>.
     */
    public Long getTradingChannelId() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>public.request.original_request_id</code>.
     */
    public RequestRecord setOriginalRequestId(UUID value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.request.original_request_id</code>.
     */
    public UUID getOriginalRequestId() {
        return (UUID) get(7);
    }

    /**
     * Setter for <code>public.request.received_at</code>.
     */
    public RequestRecord setReceivedAt(OffsetDateTime value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.request.received_at</code>.
     */
    public OffsetDateTime getReceivedAt() {
        return (OffsetDateTime) get(8);
    }

    /**
     * Setter for <code>public.request.forwarded_at</code>.
     */
    public RequestRecord setForwardedAt(OffsetDateTime value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>public.request.forwarded_at</code>.
     */
    public OffsetDateTime getForwardedAt() {
        return (OffsetDateTime) get(9);
    }

    /**
     * Setter for <code>public.request.forwarded_to</code>.
     */
    public RequestRecord setForwardedTo(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>public.request.forwarded_to</code>.
     */
    public String getForwardedTo() {
        return (String) get(10);
    }

    /**
     * Setter for <code>public.request.error_message</code>.
     */
    public RequestRecord setErrorMessage(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>public.request.error_message</code>.
     */
    public String getErrorMessage() {
        return (String) get(11);
    }

    /**
     * Setter for <code>public.request.error_stack_trace</code>.
     */
    public RequestRecord setErrorStackTrace(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>public.request.error_stack_trace</code>.
     */
    public String getErrorStackTrace() {
        return (String) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row13<UUID, RequestType, JSONB, Long, String, String, Long, UUID, OffsetDateTime, OffsetDateTime, String, String, String> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    @Override
    public Row13<UUID, RequestType, JSONB, Long, String, String, Long, UUID, OffsetDateTime, OffsetDateTime, String, String, String> valuesRow() {
        return (Row13) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Request.REQUEST.ID;
    }

    @Override
    public Field<RequestType> field2() {
        return Request.REQUEST.TYPE;
    }

    @Override
    public Field<JSONB> field3() {
        return Request.REQUEST.HEADERS;
    }

    @Override
    public Field<Long> field4() {
        return Request.REQUEST.BODY_FILE_ID;
    }

    @Override
    public Field<String> field5() {
        return Request.REQUEST.MESSAGE_ID;
    }

    @Override
    public Field<String> field6() {
        return Request.REQUEST.SUBJECT;
    }

    @Override
    public Field<Long> field7() {
        return Request.REQUEST.TRADING_CHANNEL_ID;
    }

    @Override
    public Field<UUID> field8() {
        return Request.REQUEST.ORIGINAL_REQUEST_ID;
    }

    @Override
    public Field<OffsetDateTime> field9() {
        return Request.REQUEST.RECEIVED_AT;
    }

    @Override
    public Field<OffsetDateTime> field10() {
        return Request.REQUEST.FORWARDED_AT;
    }

    @Override
    public Field<String> field11() {
        return Request.REQUEST.FORWARDED_TO;
    }

    @Override
    public Field<String> field12() {
        return Request.REQUEST.ERROR_MESSAGE;
    }

    @Override
    public Field<String> field13() {
        return Request.REQUEST.ERROR_STACK_TRACE;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public RequestType component2() {
        return getType();
    }

    @Override
    public JSONB component3() {
        return getHeaders();
    }

    @Override
    public Long component4() {
        return getBodyFileId();
    }

    @Override
    public String component5() {
        return getMessageId();
    }

    @Override
    public String component6() {
        return getSubject();
    }

    @Override
    public Long component7() {
        return getTradingChannelId();
    }

    @Override
    public UUID component8() {
        return getOriginalRequestId();
    }

    @Override
    public OffsetDateTime component9() {
        return getReceivedAt();
    }

    @Override
    public OffsetDateTime component10() {
        return getForwardedAt();
    }

    @Override
    public String component11() {
        return getForwardedTo();
    }

    @Override
    public String component12() {
        return getErrorMessage();
    }

    @Override
    public String component13() {
        return getErrorStackTrace();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public RequestType value2() {
        return getType();
    }

    @Override
    public JSONB value3() {
        return getHeaders();
    }

    @Override
    public Long value4() {
        return getBodyFileId();
    }

    @Override
    public String value5() {
        return getMessageId();
    }

    @Override
    public String value6() {
        return getSubject();
    }

    @Override
    public Long value7() {
        return getTradingChannelId();
    }

    @Override
    public UUID value8() {
        return getOriginalRequestId();
    }

    @Override
    public OffsetDateTime value9() {
        return getReceivedAt();
    }

    @Override
    public OffsetDateTime value10() {
        return getForwardedAt();
    }

    @Override
    public String value11() {
        return getForwardedTo();
    }

    @Override
    public String value12() {
        return getErrorMessage();
    }

    @Override
    public String value13() {
        return getErrorStackTrace();
    }

    @Override
    public RequestRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public RequestRecord value2(RequestType value) {
        setType(value);
        return this;
    }

    @Override
    public RequestRecord value3(JSONB value) {
        setHeaders(value);
        return this;
    }

    @Override
    public RequestRecord value4(Long value) {
        setBodyFileId(value);
        return this;
    }

    @Override
    public RequestRecord value5(String value) {
        setMessageId(value);
        return this;
    }

    @Override
    public RequestRecord value6(String value) {
        setSubject(value);
        return this;
    }

    @Override
    public RequestRecord value7(Long value) {
        setTradingChannelId(value);
        return this;
    }

    @Override
    public RequestRecord value8(UUID value) {
        setOriginalRequestId(value);
        return this;
    }

    @Override
    public RequestRecord value9(OffsetDateTime value) {
        setReceivedAt(value);
        return this;
    }

    @Override
    public RequestRecord value10(OffsetDateTime value) {
        setForwardedAt(value);
        return this;
    }

    @Override
    public RequestRecord value11(String value) {
        setForwardedTo(value);
        return this;
    }

    @Override
    public RequestRecord value12(String value) {
        setErrorMessage(value);
        return this;
    }

    @Override
    public RequestRecord value13(String value) {
        setErrorStackTrace(value);
        return this;
    }

    @Override
    public RequestRecord values(UUID value1, RequestType value2, JSONB value3, Long value4, String value5, String value6, Long value7, UUID value8, OffsetDateTime value9, OffsetDateTime value10, String value11, String value12, String value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RequestRecord
     */
    public RequestRecord() {
        super(Request.REQUEST);
    }

    /**
     * Create a detached, initialised RequestRecord
     */
    public RequestRecord(UUID id, RequestType type, JSONB headers, Long bodyFileId, String messageId, String subject, Long tradingChannelId, UUID originalRequestId, OffsetDateTime receivedAt, OffsetDateTime forwardedAt, String forwardedTo, String errorMessage, String errorStackTrace) {
        super(Request.REQUEST);

        setId(id);
        setType(type);
        setHeaders(headers);
        setBodyFileId(bodyFileId);
        setMessageId(messageId);
        setSubject(subject);
        setTradingChannelId(tradingChannelId);
        setOriginalRequestId(originalRequestId);
        setReceivedAt(receivedAt);
        setForwardedAt(forwardedAt);
        setForwardedTo(forwardedTo);
        setErrorMessage(errorMessage);
        setErrorStackTrace(errorStackTrace);
    }
}
