/*
 * This file is generated by jOOQ.
 */
package com.freighttrust.customs.jooq.tables;


import com.freighttrust.customs.jooq.Indexes;
import com.freighttrust.customs.jooq.Keys;
import com.freighttrust.customs.jooq.Public;
import com.freighttrust.customs.jooq.enums.Entity;
import com.freighttrust.customs.jooq.enums.Transport;
import com.freighttrust.customs.jooq.tables.records.MessageOriginRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MessageOrigin extends TableImpl<MessageOriginRecord> {

    private static final long serialVersionUID = 2080223786;

    /**
     * The reference instance of <code>public.message_origin</code>
     */
    public static final MessageOrigin MESSAGE_ORIGIN = new MessageOrigin();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MessageOriginRecord> getRecordType() {
        return MessageOriginRecord.class;
    }

    /**
     * The column <code>public.message_origin.id</code>.
     */
    public final TableField<MessageOriginRecord, String> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>public.message_origin.entity</code>.
     */
    public final TableField<MessageOriginRecord, Entity> ENTITY = createField(DSL.name("entity"), org.jooq.impl.SQLDataType.VARCHAR.asEnumDataType(com.freighttrust.customs.jooq.enums.Entity.class), this, "");

    /**
     * The column <code>public.message_origin.transport</code>.
     */
    public final TableField<MessageOriginRecord, Transport> TRANSPORT = createField(DSL.name("transport"), org.jooq.impl.SQLDataType.VARCHAR.asEnumDataType(com.freighttrust.customs.jooq.enums.Transport.class), this, "");

    /**
     * The column <code>public.message_origin.received_at</code>.
     */
    public final TableField<MessageOriginRecord, Timestamp> RECEIVED_AT = createField(DSL.name("received_at"), org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public final TableField<MessageOriginRecord, Object> IP_ADDRESS = createField(DSL.name("ip_address"), org.jooq.impl.DefaultDataType.getDefaultDataType("\"pg_catalog\".\"cidr\""), this, "");

    /**
     * Create a <code>public.message_origin</code> table reference
     */
    public MessageOrigin() {
        this(DSL.name("message_origin"), null);
    }

    /**
     * Create an aliased <code>public.message_origin</code> table reference
     */
    public MessageOrigin(String alias) {
        this(DSL.name(alias), MESSAGE_ORIGIN);
    }

    /**
     * Create an aliased <code>public.message_origin</code> table reference
     */
    public MessageOrigin(Name alias) {
        this(alias, MESSAGE_ORIGIN);
    }

    private MessageOrigin(Name alias, Table<MessageOriginRecord> aliased) {
        this(alias, aliased, null);
    }

    private MessageOrigin(Name alias, Table<MessageOriginRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> MessageOrigin(Table<O> child, ForeignKey<O, MessageOriginRecord> key) {
        super(child, key, MESSAGE_ORIGIN);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MESSAGE_ORIGIN_PKEY);
    }

    @Override
    public UniqueKey<MessageOriginRecord> getPrimaryKey() {
        return Keys.MESSAGE_ORIGIN_PKEY;
    }

    @Override
    public List<UniqueKey<MessageOriginRecord>> getKeys() {
        return Arrays.<UniqueKey<MessageOriginRecord>>asList(Keys.MESSAGE_ORIGIN_PKEY);
    }

    @Override
    public List<ForeignKey<MessageOriginRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<MessageOriginRecord, ?>>asList(Keys.MESSAGE_ORIGIN__MESSAGE_ORIGIN_ID_FKEY);
    }

    public Message message() {
        return new Message(this, Keys.MESSAGE_ORIGIN__MESSAGE_ORIGIN_ID_FKEY);
    }

    @Override
    public MessageOrigin as(String alias) {
        return new MessageOrigin(DSL.name(alias), this);
    }

    @Override
    public MessageOrigin as(Name alias) {
        return new MessageOrigin(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MessageOrigin rename(String name) {
        return new MessageOrigin(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MessageOrigin rename(Name name) {
        return new MessageOrigin(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<String, Entity, Transport, Timestamp, Object> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
