/*
 * This file is generated by jOOQ.
 */
package com.freighttrust.customs.jooq.tables.records;


import com.freighttrust.customs.jooq.enums.MessageType;
import com.freighttrust.customs.jooq.tables.MessageHeader;

import java.sql.Timestamp;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MessageHeaderRecord extends UpdatableRecordImpl<MessageHeaderRecord> implements Record8<String, MessageType, Timestamp, String, Short, String, Short, String> {

    private static final long serialVersionUID = -45088468;

    /**
     * Setter for <code>public.message_header.id</code>.
     */
    public MessageHeaderRecord setId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.message_header.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.message_header.type</code>.
     */
    public MessageHeaderRecord setType(MessageType value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.message_header.type</code>.
     */
    public MessageType getType() {
        return (MessageType) get(1);
    }

    /**
     * Setter for <code>public.message_header.sent_date_time</code>.
     */
    public MessageHeaderRecord setSentDateTime(Timestamp value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.message_header.sent_date_time</code>.
     */
    public Timestamp getSentDateTime() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>public.message_header.transmitter_id</code>.
     */
    public MessageHeaderRecord setTransmitterId(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.message_header.transmitter_id</code>.
     */
    public String getTransmitterId() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.message_header.transmitter_site_code</code>.
     */
    public MessageHeaderRecord setTransmitterSiteCode(Short value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.message_header.transmitter_site_code</code>.
     */
    public Short getTransmitterSiteCode() {
        return (Short) get(4);
    }

    /**
     * Setter for <code>public.message_header.preparer_id</code>.
     */
    public MessageHeaderRecord setPreparerId(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.message_header.preparer_id</code>.
     */
    public String getPreparerId() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.message_header.preparer_site_code</code>.
     */
    public MessageHeaderRecord setPreparerSiteCode(Short value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.message_header.preparer_site_code</code>.
     */
    public Short getPreparerSiteCode() {
        return (Short) get(6);
    }

    /**
     * Setter for <code>public.message_header.comment</code>.
     */
    public MessageHeaderRecord setComment(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.message_header.comment</code>.
     */
    public String getComment() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<String, MessageType, Timestamp, String, Short, String, Short, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<String, MessageType, Timestamp, String, Short, String, Short, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return MessageHeader.MESSAGE_HEADER.ID;
    }

    @Override
    public Field<MessageType> field2() {
        return MessageHeader.MESSAGE_HEADER.TYPE;
    }

    @Override
    public Field<Timestamp> field3() {
        return MessageHeader.MESSAGE_HEADER.SENT_DATE_TIME;
    }

    @Override
    public Field<String> field4() {
        return MessageHeader.MESSAGE_HEADER.TRANSMITTER_ID;
    }

    @Override
    public Field<Short> field5() {
        return MessageHeader.MESSAGE_HEADER.TRANSMITTER_SITE_CODE;
    }

    @Override
    public Field<String> field6() {
        return MessageHeader.MESSAGE_HEADER.PREPARER_ID;
    }

    @Override
    public Field<Short> field7() {
        return MessageHeader.MESSAGE_HEADER.PREPARER_SITE_CODE;
    }

    @Override
    public Field<String> field8() {
        return MessageHeader.MESSAGE_HEADER.COMMENT;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public MessageType component2() {
        return getType();
    }

    @Override
    public Timestamp component3() {
        return getSentDateTime();
    }

    @Override
    public String component4() {
        return getTransmitterId();
    }

    @Override
    public Short component5() {
        return getTransmitterSiteCode();
    }

    @Override
    public String component6() {
        return getPreparerId();
    }

    @Override
    public Short component7() {
        return getPreparerSiteCode();
    }

    @Override
    public String component8() {
        return getComment();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public MessageType value2() {
        return getType();
    }

    @Override
    public Timestamp value3() {
        return getSentDateTime();
    }

    @Override
    public String value4() {
        return getTransmitterId();
    }

    @Override
    public Short value5() {
        return getTransmitterSiteCode();
    }

    @Override
    public String value6() {
        return getPreparerId();
    }

    @Override
    public Short value7() {
        return getPreparerSiteCode();
    }

    @Override
    public String value8() {
        return getComment();
    }

    @Override
    public MessageHeaderRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public MessageHeaderRecord value2(MessageType value) {
        setType(value);
        return this;
    }

    @Override
    public MessageHeaderRecord value3(Timestamp value) {
        setSentDateTime(value);
        return this;
    }

    @Override
    public MessageHeaderRecord value4(String value) {
        setTransmitterId(value);
        return this;
    }

    @Override
    public MessageHeaderRecord value5(Short value) {
        setTransmitterSiteCode(value);
        return this;
    }

    @Override
    public MessageHeaderRecord value6(String value) {
        setPreparerId(value);
        return this;
    }

    @Override
    public MessageHeaderRecord value7(Short value) {
        setPreparerSiteCode(value);
        return this;
    }

    @Override
    public MessageHeaderRecord value8(String value) {
        setComment(value);
        return this;
    }

    @Override
    public MessageHeaderRecord values(String value1, MessageType value2, Timestamp value3, String value4, Short value5, String value6, Short value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MessageHeaderRecord
     */
    public MessageHeaderRecord() {
        super(MessageHeader.MESSAGE_HEADER);
    }

    /**
     * Create a detached, initialised MessageHeaderRecord
     */
    public MessageHeaderRecord(String id, MessageType type, Timestamp sentDateTime, String transmitterId, Short transmitterSiteCode, String preparerId, Short preparerSiteCode, String comment) {
        super(MessageHeader.MESSAGE_HEADER);

        set(0, id);
        set(1, type);
        set(2, sentDateTime);
        set(3, transmitterId);
        set(4, transmitterSiteCode);
        set(5, preparerId);
        set(6, preparerSiteCode);
        set(7, comment);
    }
}
