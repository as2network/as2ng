/*
 * This file is generated by jOOQ.
 */
package com.freighttrust.customs.jooq.tables.records;


import com.freighttrust.customs.jooq.tables.TradingPartner;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TradingPartnerRecord extends UpdatableRecordImpl<TradingPartnerRecord> implements Record4<String, String, byte[], String> {

    private static final long serialVersionUID = 144264383;

    /**
     * Setter for <code>public.trading_partner.id</code>.
     */
    public TradingPartnerRecord setId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.trading_partner.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.trading_partner.name</code>.
     */
    public TradingPartnerRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.trading_partner.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.trading_partner.x509_certificate</code>.
     */
    public TradingPartnerRecord setX509Certificate(byte... value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.trading_partner.x509_certificate</code>.
     */
    public byte[] getX509Certificate() {
        return (byte[]) get(2);
    }

    /**
     * Setter for <code>public.trading_partner.email</code>.
     */
    public TradingPartnerRecord setEmail(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.trading_partner.email</code>.
     */
    public String getEmail() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, String, byte[], String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<String, String, byte[], String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return TradingPartner.TRADING_PARTNER.ID;
    }

    @Override
    public Field<String> field2() {
        return TradingPartner.TRADING_PARTNER.NAME;
    }

    @Override
    public Field<byte[]> field3() {
        return TradingPartner.TRADING_PARTNER.X509_CERTIFICATE;
    }

    @Override
    public Field<String> field4() {
        return TradingPartner.TRADING_PARTNER.EMAIL;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public byte[] component3() {
        return getX509Certificate();
    }

    @Override
    public String component4() {
        return getEmail();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public byte[] value3() {
        return getX509Certificate();
    }

    @Override
    public String value4() {
        return getEmail();
    }

    @Override
    public TradingPartnerRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public TradingPartnerRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public TradingPartnerRecord value3(byte... value) {
        setX509Certificate(value);
        return this;
    }

    @Override
    public TradingPartnerRecord value4(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public TradingPartnerRecord values(String value1, String value2, byte[] value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TradingPartnerRecord
     */
    public TradingPartnerRecord() {
        super(TradingPartner.TRADING_PARTNER);
    }

    /**
     * Create a detached, initialised TradingPartnerRecord
     */
    public TradingPartnerRecord(String id, String name, byte[] x509Certificate, String email) {
        super(TradingPartner.TRADING_PARTNER);

        set(0, id);
        set(1, name);
        set(2, x509Certificate);
        set(3, email);
    }
}
