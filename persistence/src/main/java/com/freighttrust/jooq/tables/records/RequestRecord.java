/*
 * This file is generated by jOOQ.
 */
package com.freighttrust.jooq.tables.records;


import com.freighttrust.jooq.tables.Request;

import java.time.OffsetDateTime;
import java.util.UUID;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.JSONB;
import org.jooq.Record1;
import org.jooq.Record14;
import org.jooq.Row14;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
  value = {
    "http://www.jooq.org",
    "jOOQ version:3.12.3"
  },
  comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class RequestRecord extends UpdatableRecordImpl<RequestRecord> implements Record14<UUID, JSONB, Long, String, String, String, String, OffsetDateTime, UUID, OffsetDateTime, Boolean, String, OffsetDateTime, String> {

  private static final long serialVersionUID = 1035518772;

  /**
   * Setter for <code>public.request.id</code>.
   */
  public RequestRecord setId(UUID value) {
    set(0, value);
    return this;
  }

  /**
   * Getter for <code>public.request.id</code>.
   */
  public UUID getId() {
    return (UUID) get(0);
  }

  /**
   * Setter for <code>public.request.headers</code>.
   */
  public RequestRecord setHeaders(JSONB value) {
    set(1, value);
    return this;
  }

  /**
   * Getter for <code>public.request.headers</code>.
   */
  public JSONB getHeaders() {
    return (JSONB) get(1);
  }

  /**
   * Setter for <code>public.request.body_file_id</code>.
   */
  public RequestRecord setBodyFileId(Long value) {
    set(2, value);
    return this;
  }

  /**
   * Getter for <code>public.request.body_file_id</code>.
   */
  public Long getBodyFileId() {
    return (Long) get(2);
  }

  /**
   * Setter for <code>public.request.sender_id</code>.
   */
  public RequestRecord setSenderId(String value) {
    set(3, value);
    return this;
  }

  /**
   * Getter for <code>public.request.sender_id</code>.
   */
  public String getSenderId() {
    return (String) get(3);
  }

  /**
   * Setter for <code>public.request.recipient_id</code>.
   */
  public RequestRecord setRecipientId(String value) {
    set(4, value);
    return this;
  }

  /**
   * Getter for <code>public.request.recipient_id</code>.
   */
  public String getRecipientId() {
    return (String) get(4);
  }

  /**
   * Setter for <code>public.request.message_id</code>.
   */
  public RequestRecord setMessageId(String value) {
    set(5, value);
    return this;
  }

  /**
   * Getter for <code>public.request.message_id</code>.
   */
  public String getMessageId() {
    return (String) get(5);
  }

  /**
   * Setter for <code>public.request.subject</code>.
   */
  public RequestRecord setSubject(String value) {
    set(6, value);
    return this;
  }

  /**
   * Getter for <code>public.request.subject</code>.
   */
  public String getSubject() {
    return (String) get(6);
  }

  /**
   * Setter for <code>public.request.received_at</code>.
   */
  public RequestRecord setReceivedAt(OffsetDateTime value) {
    set(7, value);
    return this;
  }

  /**
   * Getter for <code>public.request.received_at</code>.
   */
  public OffsetDateTime getReceivedAt() {
    return (OffsetDateTime) get(7);
  }

  /**
   * Setter for <code>public.request.original_request_id</code>.
   */
  public RequestRecord setOriginalRequestId(UUID value) {
    set(8, value);
    return this;
  }

  /**
   * Getter for <code>public.request.original_request_id</code>.
   */
  public UUID getOriginalRequestId() {
    return (UUID) get(8);
  }

  /**
   * Setter for <code>public.request.processed_at</code>.
   */
  public RequestRecord setProcessedAt(OffsetDateTime value) {
    set(9, value);
    return this;
  }

  /**
   * Getter for <code>public.request.processed_at</code>.
   */
  public OffsetDateTime getProcessedAt() {
    return (OffsetDateTime) get(9);
  }

  /**
   * Setter for <code>public.request.processing_error</code>.
   */
  public RequestRecord setProcessingError(Boolean value) {
    set(10, value);
    return this;
  }

  /**
   * Getter for <code>public.request.processing_error</code>.
   */
  public Boolean getProcessingError() {
    return (Boolean) get(10);
  }

  /**
   * Setter for <code>public.request.processing_error_message</code>.
   */
  public RequestRecord setProcessingErrorMessage(String value) {
    set(11, value);
    return this;
  }

  /**
   * Getter for <code>public.request.processing_error_message</code>.
   */
  public String getProcessingErrorMessage() {
    return (String) get(11);
  }

  /**
   * Setter for <code>public.request.delivered_at</code>.
   */
  public RequestRecord setDeliveredAt(OffsetDateTime value) {
    set(12, value);
    return this;
  }

  /**
   * Getter for <code>public.request.delivered_at</code>.
   */
  public OffsetDateTime getDeliveredAt() {
    return (OffsetDateTime) get(12);
  }

  /**
   * Setter for <code>public.request.delivered_to</code>.
   */
  public RequestRecord setDeliveredTo(String value) {
    set(13, value);
    return this;
  }

  /**
   * Getter for <code>public.request.delivered_to</code>.
   */
  public String getDeliveredTo() {
    return (String) get(13);
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------

  @Override
  public Record1<UUID> key() {
    return (Record1) super.key();
  }

  // -------------------------------------------------------------------------
  // Record14 type implementation
  // -------------------------------------------------------------------------

  @Override
  public Row14<UUID, JSONB, Long, String, String, String, String, OffsetDateTime, UUID, OffsetDateTime, Boolean, String, OffsetDateTime, String> fieldsRow() {
    return (Row14) super.fieldsRow();
  }

  @Override
  public Row14<UUID, JSONB, Long, String, String, String, String, OffsetDateTime, UUID, OffsetDateTime, Boolean, String, OffsetDateTime, String> valuesRow() {
    return (Row14) super.valuesRow();
  }

  @Override
  public Field<UUID> field1() {
    return Request.REQUEST.ID;
  }

  @Override
  public Field<JSONB> field2() {
    return Request.REQUEST.HEADERS;
  }

  @Override
  public Field<Long> field3() {
    return Request.REQUEST.BODY_FILE_ID;
  }

  @Override
  public Field<String> field4() {
    return Request.REQUEST.SENDER_ID;
  }

  @Override
  public Field<String> field5() {
    return Request.REQUEST.RECIPIENT_ID;
  }

  @Override
  public Field<String> field6() {
    return Request.REQUEST.MESSAGE_ID;
  }

  @Override
  public Field<String> field7() {
    return Request.REQUEST.SUBJECT;
  }

  @Override
  public Field<OffsetDateTime> field8() {
    return Request.REQUEST.RECEIVED_AT;
  }

  @Override
  public Field<UUID> field9() {
    return Request.REQUEST.ORIGINAL_REQUEST_ID;
  }

  @Override
  public Field<OffsetDateTime> field10() {
    return Request.REQUEST.PROCESSED_AT;
  }

  @Override
  public Field<Boolean> field11() {
    return Request.REQUEST.PROCESSING_ERROR;
  }

  @Override
  public Field<String> field12() {
    return Request.REQUEST.PROCESSING_ERROR_MESSAGE;
  }

  @Override
  public Field<OffsetDateTime> field13() {
    return Request.REQUEST.DELIVERED_AT;
  }

  @Override
  public Field<String> field14() {
    return Request.REQUEST.DELIVERED_TO;
  }

  @Override
  public UUID component1() {
    return getId();
  }

  @Override
  public JSONB component2() {
    return getHeaders();
  }

  @Override
  public Long component3() {
    return getBodyFileId();
  }

  @Override
  public String component4() {
    return getSenderId();
  }

  @Override
  public String component5() {
    return getRecipientId();
  }

  @Override
  public String component6() {
    return getMessageId();
  }

  @Override
  public String component7() {
    return getSubject();
  }

  @Override
  public OffsetDateTime component8() {
    return getReceivedAt();
  }

  @Override
  public UUID component9() {
    return getOriginalRequestId();
  }

  @Override
  public OffsetDateTime component10() {
    return getProcessedAt();
  }

  @Override
  public Boolean component11() {
    return getProcessingError();
  }

  @Override
  public String component12() {
    return getProcessingErrorMessage();
  }

  @Override
  public OffsetDateTime component13() {
    return getDeliveredAt();
  }

  @Override
  public String component14() {
    return getDeliveredTo();
  }

  @Override
  public UUID value1() {
    return getId();
  }

  @Override
  public JSONB value2() {
    return getHeaders();
  }

  @Override
  public Long value3() {
    return getBodyFileId();
  }

  @Override
  public String value4() {
    return getSenderId();
  }

  @Override
  public String value5() {
    return getRecipientId();
  }

  @Override
  public String value6() {
    return getMessageId();
  }

  @Override
  public String value7() {
    return getSubject();
  }

  @Override
  public OffsetDateTime value8() {
    return getReceivedAt();
  }

  @Override
  public UUID value9() {
    return getOriginalRequestId();
  }

  @Override
  public OffsetDateTime value10() {
    return getProcessedAt();
  }

  @Override
  public Boolean value11() {
    return getProcessingError();
  }

  @Override
  public String value12() {
    return getProcessingErrorMessage();
  }

  @Override
  public OffsetDateTime value13() {
    return getDeliveredAt();
  }

  @Override
  public String value14() {
    return getDeliveredTo();
  }

  @Override
  public RequestRecord value1(UUID value) {
    setId(value);
    return this;
  }

  @Override
  public RequestRecord value2(JSONB value) {
    setHeaders(value);
    return this;
  }

  @Override
  public RequestRecord value3(Long value) {
    setBodyFileId(value);
    return this;
  }

  @Override
  public RequestRecord value4(String value) {
    setSenderId(value);
    return this;
  }

  @Override
  public RequestRecord value5(String value) {
    setRecipientId(value);
    return this;
  }

  @Override
  public RequestRecord value6(String value) {
    setMessageId(value);
    return this;
  }

  @Override
  public RequestRecord value7(String value) {
    setSubject(value);
    return this;
  }

  @Override
  public RequestRecord value8(OffsetDateTime value) {
    setReceivedAt(value);
    return this;
  }

  @Override
  public RequestRecord value9(UUID value) {
    setOriginalRequestId(value);
    return this;
  }

  @Override
  public RequestRecord value10(OffsetDateTime value) {
    setProcessedAt(value);
    return this;
  }

  @Override
  public RequestRecord value11(Boolean value) {
    setProcessingError(value);
    return this;
  }

  @Override
  public RequestRecord value12(String value) {
    setProcessingErrorMessage(value);
    return this;
  }

  @Override
  public RequestRecord value13(OffsetDateTime value) {
    setDeliveredAt(value);
    return this;
  }

  @Override
  public RequestRecord value14(String value) {
    setDeliveredTo(value);
    return this;
  }

  @Override
  public RequestRecord values(UUID value1, JSONB value2, Long value3, String value4, String value5, String value6, String value7, OffsetDateTime value8, UUID value9, OffsetDateTime value10, Boolean value11, String value12, OffsetDateTime value13, String value14) {
    value1(value1);
    value2(value2);
    value3(value3);
    value4(value4);
    value5(value5);
    value6(value6);
    value7(value7);
    value8(value8);
    value9(value9);
    value10(value10);
    value11(value11);
    value12(value12);
    value13(value13);
    value14(value14);
    return this;
  }

  // -------------------------------------------------------------------------
  // Constructors
  // -------------------------------------------------------------------------

  /**
   * Create a detached RequestRecord
   */
  public RequestRecord() {
    super(Request.REQUEST);
  }

  /**
   * Create a detached, initialised RequestRecord
   */
  public RequestRecord(UUID id, JSONB headers, Long bodyFileId, String senderId, String recipientId, String messageId, String subject, OffsetDateTime receivedAt, UUID originalRequestId, OffsetDateTime processedAt, Boolean processingError, String processingErrorMessage, OffsetDateTime deliveredAt, String deliveredTo) {
    super(Request.REQUEST);

    set(0, id);
    set(1, headers);
    set(2, bodyFileId);
    set(3, senderId);
    set(4, recipientId);
    set(5, messageId);
    set(6, subject);
    set(7, receivedAt);
    set(8, originalRequestId);
    set(9, processedAt);
    set(10, processingError);
    set(11, processingErrorMessage);
    set(12, deliveredAt);
    set(13, deliveredTo);
  }
}
