/*
 * This file is generated by jOOQ.
 */
package com.freighttrust.jooq.tables;


import com.freighttrust.jooq.Keys;
import com.freighttrust.jooq.Public;
import com.freighttrust.jooq.tables.records.TradingChannelRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row8;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.13.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TradingChannel extends TableImpl<TradingChannelRecord> {

    private static final long serialVersionUID = 1327274290;

    /**
     * The reference instance of <code>public.trading_channel</code>
     */
    public static final TradingChannel TRADING_CHANNEL = new TradingChannel();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TradingChannelRecord> getRecordType() {
        return TradingChannelRecord.class;
    }

    /**
     * The column <code>public.trading_channel.id</code>.
     */
    public final TableField<TradingChannelRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('trading_channel_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.trading_channel.name</code>.
     */
    public final TableField<TradingChannelRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>public.trading_channel.sender_id</code>.
     */
    public final TableField<TradingChannelRecord, Long> SENDER_ID = createField(DSL.name("sender_id"), org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.trading_channel.sender_as2_identifier</code>.
     */
    public final TableField<TradingChannelRecord, String> SENDER_AS2_IDENTIFIER = createField(DSL.name("sender_as2_identifier"), org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>public.trading_channel.recipient_id</code>.
     */
    public final TableField<TradingChannelRecord, Long> RECIPIENT_ID = createField(DSL.name("recipient_id"), org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.trading_channel.recipient_as2_identifier</code>.
     */
    public final TableField<TradingChannelRecord, String> RECIPIENT_AS2_IDENTIFIER = createField(DSL.name("recipient_as2_identifier"), org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>public.trading_channel.recipient_message_url</code>.
     */
    public final TableField<TradingChannelRecord, String> RECIPIENT_MESSAGE_URL = createField(DSL.name("recipient_message_url"), org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public final TableField<TradingChannelRecord, Object> VALIDITY = createField(DSL.name("validity"), org.jooq.impl.DefaultDataType.getDefaultDataType("\"pg_catalog\".\"tstzrange\"").defaultValue(org.jooq.impl.DSL.field("tstzrange(CURRENT_TIMESTAMP, NULL::timestamp with time zone)", org.jooq.impl.SQLDataType.OTHER)), this, "");

    /**
     * Create a <code>public.trading_channel</code> table reference
     */
    public TradingChannel() {
        this(DSL.name("trading_channel"), null);
    }

    /**
     * Create an aliased <code>public.trading_channel</code> table reference
     */
    public TradingChannel(String alias) {
        this(DSL.name(alias), TRADING_CHANNEL);
    }

    /**
     * Create an aliased <code>public.trading_channel</code> table reference
     */
    public TradingChannel(Name alias) {
        this(alias, TRADING_CHANNEL);
    }

    private TradingChannel(Name alias, Table<TradingChannelRecord> aliased) {
        this(alias, aliased, null);
    }

    private TradingChannel(Name alias, Table<TradingChannelRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> TradingChannel(Table<O> child, ForeignKey<O, TradingChannelRecord> key) {
        super(child, key, TRADING_CHANNEL);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public Identity<TradingChannelRecord, Long> getIdentity() {
        return Keys.IDENTITY_TRADING_CHANNEL;
    }

    @Override
    public UniqueKey<TradingChannelRecord> getPrimaryKey() {
        return Keys.TRADING_CHANNEL_PKEY;
    }

    @Override
    public List<UniqueKey<TradingChannelRecord>> getKeys() {
        return Arrays.<UniqueKey<TradingChannelRecord>>asList(Keys.TRADING_CHANNEL_PKEY, Keys.TRADING_CHANNEL_SENDER_ID_RECIPIENT_ID_KEY, Keys.TRADING_CHANNEL_SENDER_AS2_IDENTIFIER_RECIPIENT_AS2_IDENTIF_KEY);
    }

    @Override
    public List<ForeignKey<TradingChannelRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TradingChannelRecord, ?>>asList(Keys.TRADING_CHANNEL__TRADING_CHANNEL_SENDER_ID_FKEY, Keys.TRADING_CHANNEL__TRADING_CHANNEL_RECIPIENT_ID_FKEY);
    }

    public TradingPartner tradingChannelSenderIdFkey() {
        return new TradingPartner(this, Keys.TRADING_CHANNEL__TRADING_CHANNEL_SENDER_ID_FKEY);
    }

    public TradingPartner tradingChannelRecipientIdFkey() {
        return new TradingPartner(this, Keys.TRADING_CHANNEL__TRADING_CHANNEL_RECIPIENT_ID_FKEY);
    }

    @Override
    public TradingChannel as(String alias) {
        return new TradingChannel(DSL.name(alias), this);
    }

    @Override
    public TradingChannel as(Name alias) {
        return new TradingChannel(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TradingChannel rename(String name) {
        return new TradingChannel(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TradingChannel rename(Name name) {
        return new TradingChannel(name, null);
    }

    // -------------------------------------------------------------------------
    // Row8 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, String, Long, String, Long, String, String, Object> fieldsRow() {
        return (Row8) super.fieldsRow();
    }
}
