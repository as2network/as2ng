/*
 * This file is generated by jOOQ.
 */
package com.freighttrust.jooq.tables;


import com.freighttrust.jooq.Public;
import com.freighttrust.jooq.tables.records.TradingChannelHistoryRecord;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row10;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
  value = {
    "http://www.jooq.org",
    "jOOQ version:3.12.3"
  },
  comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class TradingChannelHistory extends TableImpl<TradingChannelHistoryRecord> {

  private static final long serialVersionUID = -175957181;

  /**
   * The reference instance of <code>public.trading_channel_history</code>
   */
  public static final TradingChannelHistory TRADING_CHANNEL_HISTORY = new TradingChannelHistory();

  /**
   * The class holding records for this type
   */
  @Override
  public Class<TradingChannelHistoryRecord> getRecordType() {
    return TradingChannelHistoryRecord.class;
  }

  /**
   * The column <code>public.trading_channel_history.sender_id</code>.
   */
  public final TableField<TradingChannelHistoryRecord, String> SENDER_ID = createField(DSL.name("sender_id"), org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

  /**
   * The column <code>public.trading_channel_history.recipient_id</code>.
   */
  public final TableField<TradingChannelHistoryRecord, String> RECIPIENT_ID = createField(DSL.name("recipient_id"), org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

  /**
   * The column <code>public.trading_channel_history.protocol</code>.
   */
  public final TableField<TradingChannelHistoryRecord, String> PROTOCOL = createField(DSL.name("protocol"), org.jooq.impl.SQLDataType.VARCHAR(16), this, "");

  /**
   * The column <code>public.trading_channel_history.as2_url</code>.
   */
  public final TableField<TradingChannelHistoryRecord, String> AS2_URL = createField(DSL.name("as2_url"), org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

  /**
   * The column <code>public.trading_channel_history.as2_mdn_to</code>.
   */
  public final TableField<TradingChannelHistoryRecord, String> AS2_MDN_TO = createField(DSL.name("as2_mdn_to"), org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

  /**
   * The column <code>public.trading_channel_history.as2_mdn_options</code>.
   */
  public final TableField<TradingChannelHistoryRecord, String> AS2_MDN_OPTIONS = createField(DSL.name("as2_mdn_options"), org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

  /**
   * The column <code>public.trading_channel_history.encryption_algorithm</code>.
   */
  public final TableField<TradingChannelHistoryRecord, String> ENCRYPTION_ALGORITHM = createField(DSL.name("encryption_algorithm"), org.jooq.impl.SQLDataType.VARCHAR(16), this, "");

  /**
   * The column <code>public.trading_channel_history.signing_algorithm</code>.
   */
  public final TableField<TradingChannelHistoryRecord, String> SIGNING_ALGORITHM = createField(DSL.name("signing_algorithm"), org.jooq.impl.SQLDataType.VARCHAR(16), this, "");

  /**
   * The column <code>public.trading_channel_history.rfc_3851_mic_algorithms_enabled</code>.
   */
  public final TableField<TradingChannelHistoryRecord, Boolean> RFC_3851_MIC_ALGORITHMS_ENABLED = createField(DSL.name("rfc_3851_mic_algorithms_enabled"), org.jooq.impl.SQLDataType.BOOLEAN, this, "");

  /**
   * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
   */
  @java.lang.Deprecated
  public final TableField<TradingChannelHistoryRecord, Object> VALIDITY = createField(DSL.name("validity"), org.jooq.impl.DefaultDataType.getDefaultDataType("\"pg_catalog\".\"tstzrange\""), this, "");

  /**
   * Create a <code>public.trading_channel_history</code> table reference
   */
  public TradingChannelHistory() {
    this(DSL.name("trading_channel_history"), null);
  }

  /**
   * Create an aliased <code>public.trading_channel_history</code> table reference
   */
  public TradingChannelHistory(String alias) {
    this(DSL.name(alias), TRADING_CHANNEL_HISTORY);
  }

  /**
   * Create an aliased <code>public.trading_channel_history</code> table reference
   */
  public TradingChannelHistory(Name alias) {
    this(alias, TRADING_CHANNEL_HISTORY);
  }

  private TradingChannelHistory(Name alias, Table<TradingChannelHistoryRecord> aliased) {
    this(alias, aliased, null);
  }

  private TradingChannelHistory(Name alias, Table<TradingChannelHistoryRecord> aliased, Field<?>[] parameters) {
    super(alias, null, aliased, parameters, DSL.comment(""));
  }

  public <O extends Record> TradingChannelHistory(Table<O> child, ForeignKey<O, TradingChannelHistoryRecord> key) {
    super(child, key, TRADING_CHANNEL_HISTORY);
  }

  @Override
  public Schema getSchema() {
    return Public.PUBLIC;
  }

  @Override
  public TradingChannelHistory as(String alias) {
    return new TradingChannelHistory(DSL.name(alias), this);
  }

  @Override
  public TradingChannelHistory as(Name alias) {
    return new TradingChannelHistory(alias, this);
  }

  /**
   * Rename this table
   */
  @Override
  public TradingChannelHistory rename(String name) {
    return new TradingChannelHistory(DSL.name(name), null);
  }

  /**
   * Rename this table
   */
  @Override
  public TradingChannelHistory rename(Name name) {
    return new TradingChannelHistory(name, null);
  }

  // -------------------------------------------------------------------------
  // Row10 type methods
  // -------------------------------------------------------------------------

  @Override
  public Row10<String, String, String, String, String, String, String, String, Boolean, Object> fieldsRow() {
    return (Row10) super.fieldsRow();
  }
}
