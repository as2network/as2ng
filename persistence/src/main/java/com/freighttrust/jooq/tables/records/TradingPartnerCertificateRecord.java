/*
 * This file is generated by jOOQ.
 */
package com.freighttrust.jooq.tables.records;


import com.freighttrust.jooq.tables.TradingPartnerCertificate;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TradingPartnerCertificateRecord extends UpdatableRecordImpl<TradingPartnerCertificateRecord> implements Record3<String, String, byte[]> {

    private static final long serialVersionUID = 799251474;

    /**
     * Setter for <code>public.trading_partner_certificate.trading_partner_id</code>.
     */
    public TradingPartnerCertificateRecord setTradingPartnerId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.trading_partner_certificate.trading_partner_id</code>.
     */
    public String getTradingPartnerId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.trading_partner_certificate.alias</code>.
     */
    public TradingPartnerCertificateRecord setAlias(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.trading_partner_certificate.alias</code>.
     */
    public String getAlias() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.trading_partner_certificate.x509_certificate</code>.
     */
    public TradingPartnerCertificateRecord setX509Certificate(byte... value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.trading_partner_certificate.x509_certificate</code>.
     */
    public byte[] getX509Certificate() {
        return (byte[]) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, byte[]> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, String, byte[]> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return TradingPartnerCertificate.TRADING_PARTNER_CERTIFICATE.TRADING_PARTNER_ID;
    }

    @Override
    public Field<String> field2() {
        return TradingPartnerCertificate.TRADING_PARTNER_CERTIFICATE.ALIAS;
    }

    @Override
    public Field<byte[]> field3() {
        return TradingPartnerCertificate.TRADING_PARTNER_CERTIFICATE.X509_CERTIFICATE;
    }

    @Override
    public String component1() {
        return getTradingPartnerId();
    }

    @Override
    public String component2() {
        return getAlias();
    }

    @Override
    public byte[] component3() {
        return getX509Certificate();
    }

    @Override
    public String value1() {
        return getTradingPartnerId();
    }

    @Override
    public String value2() {
        return getAlias();
    }

    @Override
    public byte[] value3() {
        return getX509Certificate();
    }

    @Override
    public TradingPartnerCertificateRecord value1(String value) {
        setTradingPartnerId(value);
        return this;
    }

    @Override
    public TradingPartnerCertificateRecord value2(String value) {
        setAlias(value);
        return this;
    }

    @Override
    public TradingPartnerCertificateRecord value3(byte... value) {
        setX509Certificate(value);
        return this;
    }

    @Override
    public TradingPartnerCertificateRecord values(String value1, String value2, byte[] value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TradingPartnerCertificateRecord
     */
    public TradingPartnerCertificateRecord() {
        super(TradingPartnerCertificate.TRADING_PARTNER_CERTIFICATE);
    }

    /**
     * Create a detached, initialised TradingPartnerCertificateRecord
     */
    public TradingPartnerCertificateRecord(String tradingPartnerId, String alias, byte[] x509Certificate) {
        super(TradingPartnerCertificate.TRADING_PARTNER_CERTIFICATE);

        set(0, tradingPartnerId);
        set(1, alias);
        set(2, x509Certificate);
    }
}
