/*
 * This file is generated by jOOQ.
 */
package com.freighttrust.jooq.tables;


import com.freighttrust.jooq.Indexes;
import com.freighttrust.jooq.Keys;
import com.freighttrust.jooq.Public;
import com.freighttrust.jooq.tables.records.MessageDispositionNotificationRecord;

import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row7;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
  value = {
    "http://www.jooq.org",
    "jOOQ version:3.12.3"
  },
  comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class MessageDispositionNotification extends TableImpl<MessageDispositionNotificationRecord> {

  private static final long serialVersionUID = -1123066318;

  /**
   * The reference instance of <code>public.message_disposition_notification</code>
   */
  public static final MessageDispositionNotification MESSAGE_DISPOSITION_NOTIFICATION = new MessageDispositionNotification();

  /**
   * The class holding records for this type
   */
  @Override
  public Class<MessageDispositionNotificationRecord> getRecordType() {
    return MessageDispositionNotificationRecord.class;
  }

  /**
   * The column <code>public.message_disposition_notification.request_id</code>.
   */
  public final TableField<MessageDispositionNotificationRecord, UUID> REQUEST_ID = createField(DSL.name("request_id"), org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

  /**
   * The column <code>public.message_disposition_notification.original_message_id</code>.
   */
  public final TableField<MessageDispositionNotificationRecord, String> ORIGINAL_MESSAGE_ID = createField(DSL.name("original_message_id"), org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

  /**
   * The column <code>public.message_disposition_notification.original_recipient</code>.
   */
  public final TableField<MessageDispositionNotificationRecord, String> ORIGINAL_RECIPIENT = createField(DSL.name("original_recipient"), org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

  /**
   * The column <code>public.message_disposition_notification.final_recipient</code>.
   */
  public final TableField<MessageDispositionNotificationRecord, String> FINAL_RECIPIENT = createField(DSL.name("final_recipient"), org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

  /**
   * The column <code>public.message_disposition_notification.reporting_ua</code>.
   */
  public final TableField<MessageDispositionNotificationRecord, String> REPORTING_UA = createField(DSL.name("reporting_ua"), org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

  /**
   * The column <code>public.message_disposition_notification.disposition</code>.
   */
  public final TableField<MessageDispositionNotificationRecord, String> DISPOSITION = createField(DSL.name("disposition"), org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

  /**
   * The column <code>public.message_disposition_notification.received_content_mic</code>.
   */
  public final TableField<MessageDispositionNotificationRecord, String> RECEIVED_CONTENT_MIC = createField(DSL.name("received_content_mic"), org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

  /**
   * Create a <code>public.message_disposition_notification</code> table reference
   */
  public MessageDispositionNotification() {
    this(DSL.name("message_disposition_notification"), null);
  }

  /**
   * Create an aliased <code>public.message_disposition_notification</code> table reference
   */
  public MessageDispositionNotification(String alias) {
    this(DSL.name(alias), MESSAGE_DISPOSITION_NOTIFICATION);
  }

  /**
   * Create an aliased <code>public.message_disposition_notification</code> table reference
   */
  public MessageDispositionNotification(Name alias) {
    this(alias, MESSAGE_DISPOSITION_NOTIFICATION);
  }

  private MessageDispositionNotification(Name alias, Table<MessageDispositionNotificationRecord> aliased) {
    this(alias, aliased, null);
  }

  private MessageDispositionNotification(Name alias, Table<MessageDispositionNotificationRecord> aliased, Field<?>[] parameters) {
    super(alias, null, aliased, parameters, DSL.comment(""));
  }

  public <O extends Record> MessageDispositionNotification(Table<O> child, ForeignKey<O, MessageDispositionNotificationRecord> key) {
    super(child, key, MESSAGE_DISPOSITION_NOTIFICATION);
  }

  @Override
  public Schema getSchema() {
    return Public.PUBLIC;
  }

  @Override
  public List<Index> getIndexes() {
    return Arrays.<Index>asList(Indexes.MESSAGE_DISPOSITION_NOTIFICATION_PKEY);
  }

  @Override
  public UniqueKey<MessageDispositionNotificationRecord> getPrimaryKey() {
    return Keys.MESSAGE_DISPOSITION_NOTIFICATION_PKEY;
  }

  @Override
  public List<UniqueKey<MessageDispositionNotificationRecord>> getKeys() {
    return Arrays.<UniqueKey<MessageDispositionNotificationRecord>>asList(Keys.MESSAGE_DISPOSITION_NOTIFICATION_PKEY);
  }

  @Override
  public List<ForeignKey<MessageDispositionNotificationRecord, ?>> getReferences() {
    return Arrays.<ForeignKey<MessageDispositionNotificationRecord, ?>>asList(Keys.MESSAGE_DISPOSITION_NOTIFICATION__MESSAGE_DISPOSITION_NOTIFICATION_REQUEST_ID_FKEY);
  }

  public Request request() {
    return new Request(this, Keys.MESSAGE_DISPOSITION_NOTIFICATION__MESSAGE_DISPOSITION_NOTIFICATION_REQUEST_ID_FKEY);
  }

  @Override
  public MessageDispositionNotification as(String alias) {
    return new MessageDispositionNotification(DSL.name(alias), this);
  }

  @Override
  public MessageDispositionNotification as(Name alias) {
    return new MessageDispositionNotification(alias, this);
  }

  /**
   * Rename this table
   */
  @Override
  public MessageDispositionNotification rename(String name) {
    return new MessageDispositionNotification(DSL.name(name), null);
  }

  /**
   * Rename this table
   */
  @Override
  public MessageDispositionNotification rename(Name name) {
    return new MessageDispositionNotification(name, null);
  }

  // -------------------------------------------------------------------------
  // Row7 type methods
  // -------------------------------------------------------------------------

  @Override
  public Row7<UUID, String, String, String, String, String, String> fieldsRow() {
    return (Row7) super.fieldsRow();
  }
}
