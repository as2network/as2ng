/*
 * This file is generated by jOOQ.
 */
package com.freighttrust.jooq.tables.records;


import com.freighttrust.jooq.tables.As2Message;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.JSONB;
import org.jooq.Record1;
import org.jooq.Record14;
import org.jooq.Row14;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class As2MessageRecord extends UpdatableRecordImpl<As2MessageRecord> implements Record14<String, String, String, String, String, Integer, Boolean, Boolean, Boolean, String, String, String, String, JSONB> {

    private static final long serialVersionUID = -29467039;

    /**
     * Setter for <code>public.as2_message.id</code>.
     */
    public As2MessageRecord setId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.as2_message.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.as2_message.sender_id</code>.
     */
    public As2MessageRecord setSenderId(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.as2_message.sender_id</code>.
     */
    public String getSenderId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.as2_message.recipient_id</code>.
     */
    public As2MessageRecord setRecipientId(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.as2_message.recipient_id</code>.
     */
    public String getRecipientId() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.as2_message.subject</code>.
     */
    public As2MessageRecord setSubject(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.as2_message.subject</code>.
     */
    public String getSubject() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.as2_message.body_content_type</code>.
     */
    public As2MessageRecord setBodyContentType(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.as2_message.body_content_type</code>.
     */
    public String getBodyContentType() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.as2_message.body_file_id</code>.
     */
    public As2MessageRecord setBodyFileId(Integer value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.as2_message.body_file_id</code>.
     */
    public Integer getBodyFileId() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>public.as2_message.encrypted</code>.
     */
    public As2MessageRecord setEncrypted(Boolean value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.as2_message.encrypted</code>.
     */
    public Boolean getEncrypted() {
        return (Boolean) get(6);
    }

    /**
     * Setter for <code>public.as2_message.compressed</code>.
     */
    public As2MessageRecord setCompressed(Boolean value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.as2_message.compressed</code>.
     */
    public Boolean getCompressed() {
        return (Boolean) get(7);
    }

    /**
     * Setter for <code>public.as2_message.signed</code>.
     */
    public As2MessageRecord setSigned(Boolean value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.as2_message.signed</code>.
     */
    public Boolean getSigned() {
        return (Boolean) get(8);
    }

    /**
     * Setter for <code>public.as2_message.mic</code>.
     */
    public As2MessageRecord setMic(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>public.as2_message.mic</code>.
     */
    public String getMic() {
        return (String) get(9);
    }

    /**
     * Setter for <code>public.as2_message.mic_algorithm</code>.
     */
    public As2MessageRecord setMicAlgorithm(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>public.as2_message.mic_algorithm</code>.
     */
    public String getMicAlgorithm() {
        return (String) get(10);
    }

    /**
     * Setter for <code>public.as2_message.receipt_delivery_option</code>.
     */
    public As2MessageRecord setReceiptDeliveryOption(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>public.as2_message.receipt_delivery_option</code>.
     */
    public String getReceiptDeliveryOption() {
        return (String) get(11);
    }

    /**
     * Setter for <code>public.as2_message.disposition_notification_to</code>.
     */
    public As2MessageRecord setDispositionNotificationTo(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>public.as2_message.disposition_notification_to</code>.
     */
    public String getDispositionNotificationTo() {
        return (String) get(12);
    }

    /**
     * Setter for <code>public.as2_message.headers</code>.
     */
    public As2MessageRecord setHeaders(JSONB value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>public.as2_message.headers</code>.
     */
    public JSONB getHeaders() {
        return (JSONB) get(13);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record14 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row14<String, String, String, String, String, Integer, Boolean, Boolean, Boolean, String, String, String, String, JSONB> fieldsRow() {
        return (Row14) super.fieldsRow();
    }

    @Override
    public Row14<String, String, String, String, String, Integer, Boolean, Boolean, Boolean, String, String, String, String, JSONB> valuesRow() {
        return (Row14) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return As2Message.AS2_MESSAGE.ID;
    }

    @Override
    public Field<String> field2() {
        return As2Message.AS2_MESSAGE.SENDER_ID;
    }

    @Override
    public Field<String> field3() {
        return As2Message.AS2_MESSAGE.RECIPIENT_ID;
    }

    @Override
    public Field<String> field4() {
        return As2Message.AS2_MESSAGE.SUBJECT;
    }

    @Override
    public Field<String> field5() {
        return As2Message.AS2_MESSAGE.BODY_CONTENT_TYPE;
    }

    @Override
    public Field<Integer> field6() {
        return As2Message.AS2_MESSAGE.BODY_FILE_ID;
    }

    @Override
    public Field<Boolean> field7() {
        return As2Message.AS2_MESSAGE.ENCRYPTED;
    }

    @Override
    public Field<Boolean> field8() {
        return As2Message.AS2_MESSAGE.COMPRESSED;
    }

    @Override
    public Field<Boolean> field9() {
        return As2Message.AS2_MESSAGE.SIGNED;
    }

    @Override
    public Field<String> field10() {
        return As2Message.AS2_MESSAGE.MIC;
    }

    @Override
    public Field<String> field11() {
        return As2Message.AS2_MESSAGE.MIC_ALGORITHM;
    }

    @Override
    public Field<String> field12() {
        return As2Message.AS2_MESSAGE.RECEIPT_DELIVERY_OPTION;
    }

    @Override
    public Field<String> field13() {
        return As2Message.AS2_MESSAGE.DISPOSITION_NOTIFICATION_TO;
    }

    @Override
    public Field<JSONB> field14() {
        return As2Message.AS2_MESSAGE.HEADERS;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getSenderId();
    }

    @Override
    public String component3() {
        return getRecipientId();
    }

    @Override
    public String component4() {
        return getSubject();
    }

    @Override
    public String component5() {
        return getBodyContentType();
    }

    @Override
    public Integer component6() {
        return getBodyFileId();
    }

    @Override
    public Boolean component7() {
        return getEncrypted();
    }

    @Override
    public Boolean component8() {
        return getCompressed();
    }

    @Override
    public Boolean component9() {
        return getSigned();
    }

    @Override
    public String component10() {
        return getMic();
    }

    @Override
    public String component11() {
        return getMicAlgorithm();
    }

    @Override
    public String component12() {
        return getReceiptDeliveryOption();
    }

    @Override
    public String component13() {
        return getDispositionNotificationTo();
    }

    @Override
    public JSONB component14() {
        return getHeaders();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getSenderId();
    }

    @Override
    public String value3() {
        return getRecipientId();
    }

    @Override
    public String value4() {
        return getSubject();
    }

    @Override
    public String value5() {
        return getBodyContentType();
    }

    @Override
    public Integer value6() {
        return getBodyFileId();
    }

    @Override
    public Boolean value7() {
        return getEncrypted();
    }

    @Override
    public Boolean value8() {
        return getCompressed();
    }

    @Override
    public Boolean value9() {
        return getSigned();
    }

    @Override
    public String value10() {
        return getMic();
    }

    @Override
    public String value11() {
        return getMicAlgorithm();
    }

    @Override
    public String value12() {
        return getReceiptDeliveryOption();
    }

    @Override
    public String value13() {
        return getDispositionNotificationTo();
    }

    @Override
    public JSONB value14() {
        return getHeaders();
    }

    @Override
    public As2MessageRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public As2MessageRecord value2(String value) {
        setSenderId(value);
        return this;
    }

    @Override
    public As2MessageRecord value3(String value) {
        setRecipientId(value);
        return this;
    }

    @Override
    public As2MessageRecord value4(String value) {
        setSubject(value);
        return this;
    }

    @Override
    public As2MessageRecord value5(String value) {
        setBodyContentType(value);
        return this;
    }

    @Override
    public As2MessageRecord value6(Integer value) {
        setBodyFileId(value);
        return this;
    }

    @Override
    public As2MessageRecord value7(Boolean value) {
        setEncrypted(value);
        return this;
    }

    @Override
    public As2MessageRecord value8(Boolean value) {
        setCompressed(value);
        return this;
    }

    @Override
    public As2MessageRecord value9(Boolean value) {
        setSigned(value);
        return this;
    }

    @Override
    public As2MessageRecord value10(String value) {
        setMic(value);
        return this;
    }

    @Override
    public As2MessageRecord value11(String value) {
        setMicAlgorithm(value);
        return this;
    }

    @Override
    public As2MessageRecord value12(String value) {
        setReceiptDeliveryOption(value);
        return this;
    }

    @Override
    public As2MessageRecord value13(String value) {
        setDispositionNotificationTo(value);
        return this;
    }

    @Override
    public As2MessageRecord value14(JSONB value) {
        setHeaders(value);
        return this;
    }

    @Override
    public As2MessageRecord values(String value1, String value2, String value3, String value4, String value5, Integer value6, Boolean value7, Boolean value8, Boolean value9, String value10, String value11, String value12, String value13, JSONB value14) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached As2MessageRecord
     */
    public As2MessageRecord() {
        super(As2Message.AS2_MESSAGE);
    }

    /**
     * Create a detached, initialised As2MessageRecord
     */
    public As2MessageRecord(String id, String senderId, String recipientId, String subject, String bodyContentType, Integer bodyFileId, Boolean encrypted, Boolean compressed, Boolean signed, String mic, String micAlgorithm, String receiptDeliveryOption, String dispositionNotificationTo, JSONB headers) {
        super(As2Message.AS2_MESSAGE);

        set(0, id);
        set(1, senderId);
        set(2, recipientId);
        set(3, subject);
        set(4, bodyContentType);
        set(5, bodyFileId);
        set(6, encrypted);
        set(7, compressed);
        set(8, signed);
        set(9, mic);
        set(10, micAlgorithm);
        set(11, receiptDeliveryOption);
        set(12, dispositionNotificationTo);
        set(13, headers);
    }
}
