/*
 * This file is generated by jOOQ.
 */
package com.freighttrust.jooq.tables.records;


import com.freighttrust.jooq.tables.Certificate;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.processing.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
  value = {
    "http://www.jooq.org",
    "jOOQ version:3.12.3"
  },
  comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class CertificateRecord extends UpdatableRecordImpl<CertificateRecord> implements Record3<String, String, String> {

  private static final long serialVersionUID = 1563196771;

  /**
   * Create a detached CertificateRecord
   */
  public CertificateRecord() {
    super(Certificate.CERTIFICATE);
  }

  /**
   * Create a detached, initialised CertificateRecord
   */
  public CertificateRecord(String tradingPartnerId, String privateKey, String x509Certificate) {
    super(Certificate.CERTIFICATE);

    set(0, tradingPartnerId);
    set(1, privateKey);
    set(2, x509Certificate);
  }

  /**
   * Getter for <code>public.certificate.trading_partner_id</code>.
   */
  public String getTradingPartnerId() {
    return (String) get(0);
  }

  /**
   * Setter for <code>public.certificate.trading_partner_id</code>.
   */
  public CertificateRecord setTradingPartnerId(String value) {
    set(0, value);
    return this;
  }

  /**
   * Getter for <code>public.certificate.private_key</code>.
   */
  public String getPrivateKey() {
    return (String) get(1);
  }

  /**
   * Setter for <code>public.certificate.private_key</code>.
   */
  public CertificateRecord setPrivateKey(String value) {
    set(1, value);
    return this;
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------

  /**
   * Getter for <code>public.certificate.x509_certificate</code>.
   */
  public String getX509Certificate() {
    return (String) get(2);
  }

  // -------------------------------------------------------------------------
  // Record3 type implementation
  // -------------------------------------------------------------------------

  /**
   * Setter for <code>public.certificate.x509_certificate</code>.
   */
  public CertificateRecord setX509Certificate(String value) {
    set(2, value);
    return this;
  }

  @Override
  public Record1<String> key() {
    return (Record1) super.key();
  }

  @Override
  public Row3<String, String, String> fieldsRow() {
    return (Row3) super.fieldsRow();
  }

  @Override
  public Row3<String, String, String> valuesRow() {
    return (Row3) super.valuesRow();
  }

  @Override
  public Field<String> field1() {
    return Certificate.CERTIFICATE.TRADING_PARTNER_ID;
  }

  @Override
  public Field<String> field2() {
    return Certificate.CERTIFICATE.PRIVATE_KEY;
  }

  @Override
  public Field<String> field3() {
    return Certificate.CERTIFICATE.X509_CERTIFICATE;
  }

  @Override
  public String component1() {
    return getTradingPartnerId();
  }

  @Override
  public String component2() {
    return getPrivateKey();
  }

  @Override
  public String component3() {
    return getX509Certificate();
  }

  @Override
  public String value1() {
    return getTradingPartnerId();
  }

  @Override
  public String value2() {
    return getPrivateKey();
  }

  @Override
  public String value3() {
    return getX509Certificate();
  }

  @Override
  public CertificateRecord value1(String value) {
    setTradingPartnerId(value);
    return this;
  }

  @Override
  public CertificateRecord value2(String value) {
    setPrivateKey(value);
    return this;
  }

  // -------------------------------------------------------------------------
  // Constructors
  // -------------------------------------------------------------------------

  @Override
  public CertificateRecord value3(String value) {
    setX509Certificate(value);
    return this;
  }

  @Override
  public CertificateRecord values(String value1, String value2, String value3) {
    value1(value1);
    value2(value2);
    value3(value3);
    return this;
  }
}
