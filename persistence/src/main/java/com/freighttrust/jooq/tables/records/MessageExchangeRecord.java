/*
 * This file is generated by jOOQ.
 */
package com.freighttrust.jooq.tables.records;


import com.freighttrust.jooq.enums.MessageExchangeType;
import com.freighttrust.jooq.tables.MessageExchange;
import org.jooq.*;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.processing.Generated;
import java.time.OffsetDateTime;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MessageExchangeRecord extends UpdatableRecordImpl<MessageExchangeRecord> implements Record20<UUID, MessageExchangeType, JSONB, OffsetDateTime, OffsetDateTime, Long, Boolean, String, String, String, String, String, String, Boolean, String, Boolean, Boolean, String, String, String> {

    private static final long serialVersionUID = 779629623;

    /**
     * Setter for <code>public.message_exchange.id</code>.
     */
    public MessageExchangeRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.message_exchange.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.message_exchange.type</code>.
     */
    public MessageExchangeRecord setType(MessageExchangeType value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.message_exchange.type</code>.
     */
    public MessageExchangeType getType() {
        return (MessageExchangeType) get(1);
    }

    /**
     * Setter for <code>public.message_exchange.headers</code>.
     */
    public MessageExchangeRecord setHeaders(JSONB value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.message_exchange.headers</code>.
     */
    public JSONB getHeaders() {
        return (JSONB) get(2);
    }

    /**
     * Setter for <code>public.message_exchange.started_at</code>.
     */
    public MessageExchangeRecord setStartedAt(OffsetDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.message_exchange.started_at</code>.
     */
    public OffsetDateTime getStartedAt() {
        return (OffsetDateTime) get(3);
    }

    /**
     * Setter for <code>public.message_exchange.finished_at</code>.
     */
    public MessageExchangeRecord setFinishedAt(OffsetDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.message_exchange.finished_at</code>.
     */
    public OffsetDateTime getFinishedAt() {
        return (OffsetDateTime) get(4);
    }

    /**
     * Setter for <code>public.message_exchange.elapsed_ms</code>.
     */
    public MessageExchangeRecord setElapsedMs(Long value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.message_exchange.elapsed_ms</code>.
     */
    public Long getElapsedMs() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>public.message_exchange.success</code>.
     */
    public MessageExchangeRecord setSuccess(Boolean value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.message_exchange.success</code>.
     */
    public Boolean getSuccess() {
        return (Boolean) get(6);
    }

    /**
     * Setter for <code>public.message_exchange.error_message</code>.
     */
    public MessageExchangeRecord setErrorMessage(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.message_exchange.error_message</code>.
     */
    public String getErrorMessage() {
        return (String) get(7);
    }

    /**
     * Setter for <code>public.message_exchange.error_trace</code>.
     */
    public MessageExchangeRecord setErrorTrace(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.message_exchange.error_trace</code>.
     */
    public String getErrorTrace() {
        return (String) get(8);
    }

    /**
     * Setter for <code>public.message_exchange.sender_id</code>.
     */
    public MessageExchangeRecord setSenderId(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>public.message_exchange.sender_id</code>.
     */
    public String getSenderId() {
        return (String) get(9);
    }

    /**
     * Setter for <code>public.message_exchange.recipient_id</code>.
     */
    public MessageExchangeRecord setRecipientId(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>public.message_exchange.recipient_id</code>.
     */
    public String getRecipientId() {
        return (String) get(10);
    }

    /**
     * Setter for <code>public.message_exchange.message_id</code>.
     */
    public MessageExchangeRecord setMessageId(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>public.message_exchange.message_id</code>.
     */
    public String getMessageId() {
        return (String) get(11);
    }

    /**
     * Setter for <code>public.message_exchange.subject</code>.
     */
    public MessageExchangeRecord setSubject(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>public.message_exchange.subject</code>.
     */
    public String getSubject() {
        return (String) get(12);
    }

    /**
     * Setter for <code>public.message_exchange.encrypted</code>.
     */
    public MessageExchangeRecord setEncrypted(Boolean value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>public.message_exchange.encrypted</code>.
     */
    public Boolean getEncrypted() {
        return (Boolean) get(13);
    }

    /**
     * Setter for <code>public.message_exchange.encryption_algorithm</code>.
     */
    public MessageExchangeRecord setEncryptionAlgorithm(String value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>public.message_exchange.encryption_algorithm</code>.
     */
    public String getEncryptionAlgorithm() {
        return (String) get(14);
    }

    /**
     * Setter for <code>public.message_exchange.compressed</code>.
     */
    public MessageExchangeRecord setCompressed(Boolean value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>public.message_exchange.compressed</code>.
     */
    public Boolean getCompressed() {
        return (Boolean) get(15);
    }

    /**
     * Setter for <code>public.message_exchange.signed</code>.
     */
    public MessageExchangeRecord setSigned(Boolean value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>public.message_exchange.signed</code>.
     */
    public Boolean getSigned() {
        return (Boolean) get(16);
    }

    /**
     * Setter for <code>public.message_exchange.signing_algorithm</code>.
     */
    public MessageExchangeRecord setSigningAlgorithm(String value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>public.message_exchange.signing_algorithm</code>.
     */
    public String getSigningAlgorithm() {
        return (String) get(17);
    }

    /**
     * Setter for <code>public.message_exchange.mic</code>.
     */
    public MessageExchangeRecord setMic(String value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>public.message_exchange.mic</code>.
     */
    public String getMic() {
        return (String) get(18);
    }

    /**
     * Setter for <code>public.message_exchange.mic_algorithm</code>.
     */
    public MessageExchangeRecord setMicAlgorithm(String value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for <code>public.message_exchange.mic_algorithm</code>.
     */
    public String getMicAlgorithm() {
        return (String) get(19);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record20 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row20<UUID, MessageExchangeType, JSONB, OffsetDateTime, OffsetDateTime, Long, Boolean, String, String, String, String, String, String, Boolean, String, Boolean, Boolean, String, String, String> fieldsRow() {
        return (Row20) super.fieldsRow();
    }

    @Override
    public Row20<UUID, MessageExchangeType, JSONB, OffsetDateTime, OffsetDateTime, Long, Boolean, String, String, String, String, String, String, Boolean, String, Boolean, Boolean, String, String, String> valuesRow() {
        return (Row20) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return MessageExchange.MESSAGE_EXCHANGE.ID;
    }

    @Override
    public Field<MessageExchangeType> field2() {
        return MessageExchange.MESSAGE_EXCHANGE.TYPE;
    }

    @Override
    public Field<JSONB> field3() {
        return MessageExchange.MESSAGE_EXCHANGE.HEADERS;
    }

    @Override
    public Field<OffsetDateTime> field4() {
        return MessageExchange.MESSAGE_EXCHANGE.STARTED_AT;
    }

    @Override
    public Field<OffsetDateTime> field5() {
        return MessageExchange.MESSAGE_EXCHANGE.FINISHED_AT;
    }

    @Override
    public Field<Long> field6() {
        return MessageExchange.MESSAGE_EXCHANGE.ELAPSED_MS;
    }

    @Override
    public Field<Boolean> field7() {
        return MessageExchange.MESSAGE_EXCHANGE.SUCCESS;
    }

    @Override
    public Field<String> field8() {
        return MessageExchange.MESSAGE_EXCHANGE.ERROR_MESSAGE;
    }

    @Override
    public Field<String> field9() {
        return MessageExchange.MESSAGE_EXCHANGE.ERROR_TRACE;
    }

    @Override
    public Field<String> field10() {
        return MessageExchange.MESSAGE_EXCHANGE.SENDER_ID;
    }

    @Override
    public Field<String> field11() {
        return MessageExchange.MESSAGE_EXCHANGE.RECIPIENT_ID;
    }

    @Override
    public Field<String> field12() {
        return MessageExchange.MESSAGE_EXCHANGE.MESSAGE_ID;
    }

    @Override
    public Field<String> field13() {
        return MessageExchange.MESSAGE_EXCHANGE.SUBJECT;
    }

    @Override
    public Field<Boolean> field14() {
        return MessageExchange.MESSAGE_EXCHANGE.ENCRYPTED;
    }

    @Override
    public Field<String> field15() {
        return MessageExchange.MESSAGE_EXCHANGE.ENCRYPTION_ALGORITHM;
    }

    @Override
    public Field<Boolean> field16() {
        return MessageExchange.MESSAGE_EXCHANGE.COMPRESSED;
    }

    @Override
    public Field<Boolean> field17() {
        return MessageExchange.MESSAGE_EXCHANGE.SIGNED;
    }

    @Override
    public Field<String> field18() {
        return MessageExchange.MESSAGE_EXCHANGE.SIGNING_ALGORITHM;
    }

    @Override
    public Field<String> field19() {
        return MessageExchange.MESSAGE_EXCHANGE.MIC;
    }

    @Override
    public Field<String> field20() {
        return MessageExchange.MESSAGE_EXCHANGE.MIC_ALGORITHM;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public MessageExchangeType component2() {
        return getType();
    }

    @Override
    public JSONB component3() {
        return getHeaders();
    }

    @Override
    public OffsetDateTime component4() {
        return getStartedAt();
    }

    @Override
    public OffsetDateTime component5() {
        return getFinishedAt();
    }

    @Override
    public Long component6() {
        return getElapsedMs();
    }

    @Override
    public Boolean component7() {
        return getSuccess();
    }

    @Override
    public String component8() {
        return getErrorMessage();
    }

    @Override
    public String component9() {
        return getErrorTrace();
    }

    @Override
    public String component10() {
        return getSenderId();
    }

    @Override
    public String component11() {
        return getRecipientId();
    }

    @Override
    public String component12() {
        return getMessageId();
    }

    @Override
    public String component13() {
        return getSubject();
    }

    @Override
    public Boolean component14() {
        return getEncrypted();
    }

    @Override
    public String component15() {
        return getEncryptionAlgorithm();
    }

    @Override
    public Boolean component16() {
        return getCompressed();
    }

    @Override
    public Boolean component17() {
        return getSigned();
    }

    @Override
    public String component18() {
        return getSigningAlgorithm();
    }

    @Override
    public String component19() {
        return getMic();
    }

    @Override
    public String component20() {
        return getMicAlgorithm();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public MessageExchangeType value2() {
        return getType();
    }

    @Override
    public JSONB value3() {
        return getHeaders();
    }

    @Override
    public OffsetDateTime value4() {
        return getStartedAt();
    }

    @Override
    public OffsetDateTime value5() {
        return getFinishedAt();
    }

    @Override
    public Long value6() {
        return getElapsedMs();
    }

    @Override
    public Boolean value7() {
        return getSuccess();
    }

    @Override
    public String value8() {
        return getErrorMessage();
    }

    @Override
    public String value9() {
        return getErrorTrace();
    }

    @Override
    public String value10() {
        return getSenderId();
    }

    @Override
    public String value11() {
        return getRecipientId();
    }

    @Override
    public String value12() {
        return getMessageId();
    }

    @Override
    public String value13() {
        return getSubject();
    }

    @Override
    public Boolean value14() {
        return getEncrypted();
    }

    @Override
    public String value15() {
        return getEncryptionAlgorithm();
    }

    @Override
    public Boolean value16() {
        return getCompressed();
    }

    @Override
    public Boolean value17() {
        return getSigned();
    }

    @Override
    public String value18() {
        return getSigningAlgorithm();
    }

    @Override
    public String value19() {
        return getMic();
    }

    @Override
    public String value20() {
        return getMicAlgorithm();
    }

    @Override
    public MessageExchangeRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public MessageExchangeRecord value2(MessageExchangeType value) {
        setType(value);
        return this;
    }

    @Override
    public MessageExchangeRecord value3(JSONB value) {
        setHeaders(value);
        return this;
    }

    @Override
    public MessageExchangeRecord value4(OffsetDateTime value) {
        setStartedAt(value);
        return this;
    }

    @Override
    public MessageExchangeRecord value5(OffsetDateTime value) {
        setFinishedAt(value);
        return this;
    }

    @Override
    public MessageExchangeRecord value6(Long value) {
        setElapsedMs(value);
        return this;
    }

    @Override
    public MessageExchangeRecord value7(Boolean value) {
        setSuccess(value);
        return this;
    }

    @Override
    public MessageExchangeRecord value8(String value) {
        setErrorMessage(value);
        return this;
    }

    @Override
    public MessageExchangeRecord value9(String value) {
        setErrorTrace(value);
        return this;
    }

    @Override
    public MessageExchangeRecord value10(String value) {
        setSenderId(value);
        return this;
    }

    @Override
    public MessageExchangeRecord value11(String value) {
        setRecipientId(value);
        return this;
    }

    @Override
    public MessageExchangeRecord value12(String value) {
        setMessageId(value);
        return this;
    }

    @Override
    public MessageExchangeRecord value13(String value) {
        setSubject(value);
        return this;
    }

    @Override
    public MessageExchangeRecord value14(Boolean value) {
        setEncrypted(value);
        return this;
    }

    @Override
    public MessageExchangeRecord value15(String value) {
        setEncryptionAlgorithm(value);
        return this;
    }

    @Override
    public MessageExchangeRecord value16(Boolean value) {
        setCompressed(value);
        return this;
    }

    @Override
    public MessageExchangeRecord value17(Boolean value) {
        setSigned(value);
        return this;
    }

    @Override
    public MessageExchangeRecord value18(String value) {
        setSigningAlgorithm(value);
        return this;
    }

    @Override
    public MessageExchangeRecord value19(String value) {
        setMic(value);
        return this;
    }

    @Override
    public MessageExchangeRecord value20(String value) {
        setMicAlgorithm(value);
        return this;
    }

    @Override
    public MessageExchangeRecord values(UUID value1, MessageExchangeType value2, JSONB value3, OffsetDateTime value4, OffsetDateTime value5, Long value6, Boolean value7, String value8, String value9, String value10, String value11, String value12, String value13, Boolean value14, String value15, Boolean value16, Boolean value17, String value18, String value19, String value20) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        value19(value19);
        value20(value20);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MessageExchangeRecord
     */
    public MessageExchangeRecord() {
        super(MessageExchange.MESSAGE_EXCHANGE);
    }

    /**
     * Create a detached, initialised MessageExchangeRecord
     */
    public MessageExchangeRecord(UUID id, MessageExchangeType type, JSONB headers, OffsetDateTime startedAt, OffsetDateTime finishedAt, Long elapsedMs, Boolean success, String errorMessage, String errorTrace, String senderId, String recipientId, String messageId, String subject, Boolean encrypted, String encryptionAlgorithm, Boolean compressed, Boolean signed, String signingAlgorithm, String mic, String micAlgorithm) {
        super(MessageExchange.MESSAGE_EXCHANGE);

        set(0, id);
        set(1, type);
        set(2, headers);
        set(3, startedAt);
        set(4, finishedAt);
        set(5, elapsedMs);
        set(6, success);
        set(7, errorMessage);
        set(8, errorTrace);
        set(9, senderId);
        set(10, recipientId);
        set(11, messageId);
        set(12, subject);
        set(13, encrypted);
        set(14, encryptionAlgorithm);
        set(15, compressed);
        set(16, signed);
        set(17, signingAlgorithm);
        set(18, mic);
        set(19, micAlgorithm);
    }
}
