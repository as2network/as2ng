/*
 * This file is generated by jOOQ.
 */
package com.freighttrust.jooq;


import com.freighttrust.jooq.tables.As2Mdn;
import com.freighttrust.jooq.tables.As2Message;
import com.freighttrust.jooq.tables.FlywaySchemaHistory;
import com.freighttrust.jooq.tables.TradingPartner;
import com.freighttrust.jooq.tables.TradingPartnerCertificate;
import com.freighttrust.jooq.tables.TradingPartnership;
import com.freighttrust.jooq.tables.records.As2MdnRecord;
import com.freighttrust.jooq.tables.records.As2MessageRecord;
import com.freighttrust.jooq.tables.records.FlywaySchemaHistoryRecord;
import com.freighttrust.jooq.tables.records.TradingPartnerCertificateRecord;
import com.freighttrust.jooq.tables.records.TradingPartnerRecord;
import com.freighttrust.jooq.tables.records.TradingPartnershipRecord;

import javax.annotation.processing.Generated;

import org.jooq.ForeignKey;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>public</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<As2MdnRecord> AS2_MDN_PKEY = UniqueKeys0.AS2_MDN_PKEY;
    public static final UniqueKey<As2MessageRecord> AS2_MESSAGE_PKEY = UniqueKeys0.AS2_MESSAGE_PKEY;
    public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = UniqueKeys0.FLYWAY_SCHEMA_HISTORY_PK;
    public static final UniqueKey<TradingPartnerRecord> TRADING_PARTNER_PKEY = UniqueKeys0.TRADING_PARTNER_PKEY;
    public static final UniqueKey<TradingPartnerRecord> TRADING_PARTNER_NAME_KEY = UniqueKeys0.TRADING_PARTNER_NAME_KEY;
    public static final UniqueKey<TradingPartnerCertificateRecord> TRADING_PARTNER_CERTIFICATE_PKEY = UniqueKeys0.TRADING_PARTNER_CERTIFICATE_PKEY;
    public static final UniqueKey<TradingPartnershipRecord> TRADING_PARTNERSHIP_PKEY = UniqueKeys0.TRADING_PARTNERSHIP_PKEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<As2MdnRecord, As2MessageRecord> AS2_MDN__AS2_MDN_MESSAGE_ID_FKEY = ForeignKeys0.AS2_MDN__AS2_MDN_MESSAGE_ID_FKEY;
    public static final ForeignKey<As2MessageRecord, TradingPartnerRecord> AS2_MESSAGE__AS2_MESSAGE_FROM_FKEY = ForeignKeys0.AS2_MESSAGE__AS2_MESSAGE_FROM_FKEY;
    public static final ForeignKey<As2MessageRecord, TradingPartnerRecord> AS2_MESSAGE__AS2_MESSAGE_TO_FKEY = ForeignKeys0.AS2_MESSAGE__AS2_MESSAGE_TO_FKEY;
    public static final ForeignKey<TradingPartnerCertificateRecord, TradingPartnerRecord> TRADING_PARTNER_CERTIFICATE__TRADING_PARTNER_CERTIFICATE_TRADING_PARTNER_ID_FKEY = ForeignKeys0.TRADING_PARTNER_CERTIFICATE__TRADING_PARTNER_CERTIFICATE_TRADING_PARTNER_ID_FKEY;
    public static final ForeignKey<TradingPartnershipRecord, TradingPartnerRecord> TRADING_PARTNERSHIP__TRADING_PARTNERSHIP_SENDER_ID_FKEY = ForeignKeys0.TRADING_PARTNERSHIP__TRADING_PARTNERSHIP_SENDER_ID_FKEY;
    public static final ForeignKey<TradingPartnershipRecord, TradingPartnerRecord> TRADING_PARTNERSHIP__TRADING_PARTNERSHIP_RECIPIENT_ID_FKEY = ForeignKeys0.TRADING_PARTNERSHIP__TRADING_PARTNERSHIP_RECIPIENT_ID_FKEY;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class UniqueKeys0 {
        public static final UniqueKey<As2MdnRecord> AS2_MDN_PKEY = Internal.createUniqueKey(As2Mdn.AS2_MDN, "as2_mdn_pkey", As2Mdn.AS2_MDN.ID);
        public static final UniqueKey<As2MessageRecord> AS2_MESSAGE_PKEY = Internal.createUniqueKey(As2Message.AS2_MESSAGE, "as2_message_pkey", As2Message.AS2_MESSAGE.ID);
        public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = Internal.createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, "flyway_schema_history_pk", FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK);
        public static final UniqueKey<TradingPartnerRecord> TRADING_PARTNER_PKEY = Internal.createUniqueKey(TradingPartner.TRADING_PARTNER, "trading_partner_pkey", TradingPartner.TRADING_PARTNER.ID);
        public static final UniqueKey<TradingPartnerRecord> TRADING_PARTNER_NAME_KEY = Internal.createUniqueKey(TradingPartner.TRADING_PARTNER, "trading_partner_name_key", TradingPartner.TRADING_PARTNER.NAME);
        public static final UniqueKey<TradingPartnerCertificateRecord> TRADING_PARTNER_CERTIFICATE_PKEY = Internal.createUniqueKey(TradingPartnerCertificate.TRADING_PARTNER_CERTIFICATE, "trading_partner_certificate_pkey", TradingPartnerCertificate.TRADING_PARTNER_CERTIFICATE.TRADING_PARTNER_ID, TradingPartnerCertificate.TRADING_PARTNER_CERTIFICATE.ALIAS);
        public static final UniqueKey<TradingPartnershipRecord> TRADING_PARTNERSHIP_PKEY = Internal.createUniqueKey(TradingPartnership.TRADING_PARTNERSHIP, "trading_partnership_pkey", TradingPartnership.TRADING_PARTNERSHIP.SENDER_ID, TradingPartnership.TRADING_PARTNERSHIP.RECIPIENT_ID);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<As2MdnRecord, As2MessageRecord> AS2_MDN__AS2_MDN_MESSAGE_ID_FKEY = Internal.createForeignKey(com.freighttrust.jooq.Keys.AS2_MESSAGE_PKEY, As2Mdn.AS2_MDN, "as2_mdn__as2_mdn_message_id_fkey", As2Mdn.AS2_MDN.MESSAGE_ID);
        public static final ForeignKey<As2MessageRecord, TradingPartnerRecord> AS2_MESSAGE__AS2_MESSAGE_FROM_FKEY = Internal.createForeignKey(com.freighttrust.jooq.Keys.TRADING_PARTNER_PKEY, As2Message.AS2_MESSAGE, "as2_message__as2_message_from_fkey", As2Message.AS2_MESSAGE.FROM);
        public static final ForeignKey<As2MessageRecord, TradingPartnerRecord> AS2_MESSAGE__AS2_MESSAGE_TO_FKEY = Internal.createForeignKey(com.freighttrust.jooq.Keys.TRADING_PARTNER_PKEY, As2Message.AS2_MESSAGE, "as2_message__as2_message_to_fkey", As2Message.AS2_MESSAGE.TO);
        public static final ForeignKey<TradingPartnerCertificateRecord, TradingPartnerRecord> TRADING_PARTNER_CERTIFICATE__TRADING_PARTNER_CERTIFICATE_TRADING_PARTNER_ID_FKEY = Internal.createForeignKey(com.freighttrust.jooq.Keys.TRADING_PARTNER_PKEY, TradingPartnerCertificate.TRADING_PARTNER_CERTIFICATE, "trading_partner_certificate__trading_partner_certificate_trading_partner_id_fkey", TradingPartnerCertificate.TRADING_PARTNER_CERTIFICATE.TRADING_PARTNER_ID);
        public static final ForeignKey<TradingPartnershipRecord, TradingPartnerRecord> TRADING_PARTNERSHIP__TRADING_PARTNERSHIP_SENDER_ID_FKEY = Internal.createForeignKey(com.freighttrust.jooq.Keys.TRADING_PARTNER_PKEY, TradingPartnership.TRADING_PARTNERSHIP, "trading_partnership__trading_partnership_sender_id_fkey", TradingPartnership.TRADING_PARTNERSHIP.SENDER_ID);
        public static final ForeignKey<TradingPartnershipRecord, TradingPartnerRecord> TRADING_PARTNERSHIP__TRADING_PARTNERSHIP_RECIPIENT_ID_FKEY = Internal.createForeignKey(com.freighttrust.jooq.Keys.TRADING_PARTNER_PKEY, TradingPartnership.TRADING_PARTNERSHIP, "trading_partnership__trading_partnership_recipient_id_fkey", TradingPartnership.TRADING_PARTNERSHIP.RECIPIENT_ID);
    }
}
