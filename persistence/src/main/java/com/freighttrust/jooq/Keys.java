/*
 * This file is generated by jOOQ.
 */
package com.freighttrust.jooq;


import com.freighttrust.jooq.tables.Certificate;
import com.freighttrust.jooq.tables.File;
import com.freighttrust.jooq.tables.FlywaySchemaHistory;
import com.freighttrust.jooq.tables.Message;
import com.freighttrust.jooq.tables.MessageDispositionNotification;
import com.freighttrust.jooq.tables.Request;
import com.freighttrust.jooq.tables.TradingChannel;
import com.freighttrust.jooq.tables.TradingPartner;
import com.freighttrust.jooq.tables.records.CertificateRecord;
import com.freighttrust.jooq.tables.records.FileRecord;
import com.freighttrust.jooq.tables.records.FlywaySchemaHistoryRecord;
import com.freighttrust.jooq.tables.records.MessageDispositionNotificationRecord;
import com.freighttrust.jooq.tables.records.MessageRecord;
import com.freighttrust.jooq.tables.records.RequestRecord;
import com.freighttrust.jooq.tables.records.TradingChannelRecord;
import com.freighttrust.jooq.tables.records.TradingPartnerRecord;

import javax.annotation.processing.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>public</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<FileRecord, Long> IDENTITY_FILE = Identities0.IDENTITY_FILE;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CertificateRecord> CERTIFICATE_PKEY = UniqueKeys0.CERTIFICATE_PKEY;
    public static final UniqueKey<FileRecord> FILE_PKEY = UniqueKeys0.FILE_PKEY;
    public static final UniqueKey<FileRecord> FILE_BUCKET_KEY_KEY = UniqueKeys0.FILE_BUCKET_KEY_KEY;
    public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = UniqueKeys0.FLYWAY_SCHEMA_HISTORY_PK;
    public static final UniqueKey<MessageRecord> MESSAGE_PKEY = UniqueKeys0.MESSAGE_PKEY;
    public static final UniqueKey<MessageDispositionNotificationRecord> MESSAGE_DISPOSITION_NOTIFICATION_PKEY = UniqueKeys0.MESSAGE_DISPOSITION_NOTIFICATION_PKEY;
    public static final UniqueKey<RequestRecord> REQUEST_PKEY = UniqueKeys0.REQUEST_PKEY;
    public static final UniqueKey<RequestRecord> REQUEST_MESSAGE_ID_KEY = UniqueKeys0.REQUEST_MESSAGE_ID_KEY;
    public static final UniqueKey<TradingChannelRecord> TRADING_CHANNEL_PKEY = UniqueKeys0.TRADING_CHANNEL_PKEY;
    public static final UniqueKey<TradingPartnerRecord> TRADING_PARTNER_PKEY = UniqueKeys0.TRADING_PARTNER_PKEY;
    public static final UniqueKey<TradingPartnerRecord> TRADING_PARTNER_NAME_KEY = UniqueKeys0.TRADING_PARTNER_NAME_KEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<CertificateRecord, TradingPartnerRecord> CERTIFICATE__CERTIFICATE_TRADING_PARTNER_ID_FKEY = ForeignKeys0.CERTIFICATE__CERTIFICATE_TRADING_PARTNER_ID_FKEY;
    public static final ForeignKey<MessageRecord, RequestRecord> MESSAGE__MESSAGE_REQUEST_ID_FKEY = ForeignKeys0.MESSAGE__MESSAGE_REQUEST_ID_FKEY;
    public static final ForeignKey<MessageDispositionNotificationRecord, RequestRecord> MESSAGE_DISPOSITION_NOTIFICATION__MESSAGE_DISPOSITION_NOTIFICATION_REQUEST_ID_FKEY = ForeignKeys0.MESSAGE_DISPOSITION_NOTIFICATION__MESSAGE_DISPOSITION_NOTIFICATION_REQUEST_ID_FKEY;
    public static final ForeignKey<RequestRecord, TradingPartnerRecord> REQUEST__REQUEST_SENDER_ID_FKEY = ForeignKeys0.REQUEST__REQUEST_SENDER_ID_FKEY;
    public static final ForeignKey<RequestRecord, TradingPartnerRecord> REQUEST__REQUEST_RECIPIENT_ID_FKEY = ForeignKeys0.REQUEST__REQUEST_RECIPIENT_ID_FKEY;
    public static final ForeignKey<RequestRecord, RequestRecord> REQUEST__REQUEST_ORIGINAL_REQUEST_ID_FKEY = ForeignKeys0.REQUEST__REQUEST_ORIGINAL_REQUEST_ID_FKEY;
    public static final ForeignKey<TradingChannelRecord, TradingPartnerRecord> TRADING_CHANNEL__TRADING_CHANNEL_SENDER_ID_FKEY = ForeignKeys0.TRADING_CHANNEL__TRADING_CHANNEL_SENDER_ID_FKEY;
    public static final ForeignKey<TradingChannelRecord, TradingPartnerRecord> TRADING_CHANNEL__TRADING_CHANNEL_RECIPIENT_ID_FKEY = ForeignKeys0.TRADING_CHANNEL__TRADING_CHANNEL_RECIPIENT_ID_FKEY;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<FileRecord, Long> IDENTITY_FILE = Internal.createIdentity(File.FILE, File.FILE.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<CertificateRecord> CERTIFICATE_PKEY = Internal.createUniqueKey(Certificate.CERTIFICATE, "certificate_pkey", Certificate.CERTIFICATE.TRADING_PARTNER_ID);
        public static final UniqueKey<FileRecord> FILE_PKEY = Internal.createUniqueKey(File.FILE, "file_pkey", File.FILE.ID);
        public static final UniqueKey<FileRecord> FILE_BUCKET_KEY_KEY = Internal.createUniqueKey(File.FILE, "file_bucket_key_key", File.FILE.BUCKET, File.FILE.KEY);
        public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = Internal.createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, "flyway_schema_history_pk", FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK);
        public static final UniqueKey<MessageRecord> MESSAGE_PKEY = Internal.createUniqueKey(Message.MESSAGE, "message_pkey", Message.MESSAGE.REQUEST_ID);
        public static final UniqueKey<MessageDispositionNotificationRecord> MESSAGE_DISPOSITION_NOTIFICATION_PKEY = Internal.createUniqueKey(MessageDispositionNotification.MESSAGE_DISPOSITION_NOTIFICATION, "message_disposition_notification_pkey", MessageDispositionNotification.MESSAGE_DISPOSITION_NOTIFICATION.REQUEST_ID);
        public static final UniqueKey<RequestRecord> REQUEST_PKEY = Internal.createUniqueKey(Request.REQUEST, "request_pkey", Request.REQUEST.ID);
        public static final UniqueKey<RequestRecord> REQUEST_MESSAGE_ID_KEY = Internal.createUniqueKey(Request.REQUEST, "request_message_id_key", Request.REQUEST.MESSAGE_ID);
        public static final UniqueKey<TradingChannelRecord> TRADING_CHANNEL_PKEY = Internal.createUniqueKey(TradingChannel.TRADING_CHANNEL, "trading_channel_pkey", TradingChannel.TRADING_CHANNEL.SENDER_ID, TradingChannel.TRADING_CHANNEL.RECIPIENT_ID);
        public static final UniqueKey<TradingPartnerRecord> TRADING_PARTNER_PKEY = Internal.createUniqueKey(TradingPartner.TRADING_PARTNER, "trading_partner_pkey", TradingPartner.TRADING_PARTNER.ID);
        public static final UniqueKey<TradingPartnerRecord> TRADING_PARTNER_NAME_KEY = Internal.createUniqueKey(TradingPartner.TRADING_PARTNER, "trading_partner_name_key", TradingPartner.TRADING_PARTNER.NAME);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<CertificateRecord, TradingPartnerRecord> CERTIFICATE__CERTIFICATE_TRADING_PARTNER_ID_FKEY = Internal.createForeignKey(com.freighttrust.jooq.Keys.TRADING_PARTNER_PKEY, Certificate.CERTIFICATE, "certificate__certificate_trading_partner_id_fkey", Certificate.CERTIFICATE.TRADING_PARTNER_ID);
        public static final ForeignKey<MessageRecord, RequestRecord> MESSAGE__MESSAGE_REQUEST_ID_FKEY = Internal.createForeignKey(com.freighttrust.jooq.Keys.REQUEST_PKEY, Message.MESSAGE, "message__message_request_id_fkey", Message.MESSAGE.REQUEST_ID);
        public static final ForeignKey<MessageDispositionNotificationRecord, RequestRecord> MESSAGE_DISPOSITION_NOTIFICATION__MESSAGE_DISPOSITION_NOTIFICATION_REQUEST_ID_FKEY = Internal.createForeignKey(com.freighttrust.jooq.Keys.REQUEST_PKEY, MessageDispositionNotification.MESSAGE_DISPOSITION_NOTIFICATION, "message_disposition_notification__message_disposition_notification_request_id_fkey", MessageDispositionNotification.MESSAGE_DISPOSITION_NOTIFICATION.REQUEST_ID);
        public static final ForeignKey<RequestRecord, TradingPartnerRecord> REQUEST__REQUEST_SENDER_ID_FKEY = Internal.createForeignKey(com.freighttrust.jooq.Keys.TRADING_PARTNER_PKEY, Request.REQUEST, "request__request_sender_id_fkey", Request.REQUEST.SENDER_ID);
        public static final ForeignKey<RequestRecord, TradingPartnerRecord> REQUEST__REQUEST_RECIPIENT_ID_FKEY = Internal.createForeignKey(com.freighttrust.jooq.Keys.TRADING_PARTNER_PKEY, Request.REQUEST, "request__request_recipient_id_fkey", Request.REQUEST.RECIPIENT_ID);
        public static final ForeignKey<RequestRecord, RequestRecord> REQUEST__REQUEST_ORIGINAL_REQUEST_ID_FKEY = Internal.createForeignKey(com.freighttrust.jooq.Keys.REQUEST_PKEY, Request.REQUEST, "request__request_original_request_id_fkey", Request.REQUEST.ORIGINAL_REQUEST_ID);
        public static final ForeignKey<TradingChannelRecord, TradingPartnerRecord> TRADING_CHANNEL__TRADING_CHANNEL_SENDER_ID_FKEY = Internal.createForeignKey(com.freighttrust.jooq.Keys.TRADING_PARTNER_PKEY, TradingChannel.TRADING_CHANNEL, "trading_channel__trading_channel_sender_id_fkey", TradingChannel.TRADING_CHANNEL.SENDER_ID);
        public static final ForeignKey<TradingChannelRecord, TradingPartnerRecord> TRADING_CHANNEL__TRADING_CHANNEL_RECIPIENT_ID_FKEY = Internal.createForeignKey(com.freighttrust.jooq.Keys.TRADING_PARTNER_PKEY, TradingChannel.TRADING_CHANNEL, "trading_channel__trading_channel_recipient_id_fkey", TradingChannel.TRADING_CHANNEL.RECIPIENT_ID);
    }
}
